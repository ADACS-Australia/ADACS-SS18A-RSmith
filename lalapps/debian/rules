#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1


# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

PREFIX = /opt/lscsoft/lalapps
FRAMEPREFIX = /opt/lscsoft/libframe
METAIOPREFIX = /opt/lscsoft/libmetaio
LALPREFIX = /opt/lscsoft/lal
LALSTOCHPREFIX = /opt/lscsoft/lalstochastic
LALFRAME = /opt/lscsoft/lalframe
LALXMLPREFIX = /opt/lscsoft/lalxml

CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

configure:
	sh ./00boot

config.status: configure
	dh_testdir

#	LDFLAGS="-Wl,-z,defs" \
# moved to install
#	CFLAGS="$(CFLAGS)" \
	#	PKG_CONFIG_PATH=$(FRAMEPREFIX)/lib/pkgconfig:$(METAIOPREFIX)/lib/pkgconfig:$(LALPREFIX)/lib/pkgconfig:$(LALSTOCHPREFIX)/lib/pkgconfig:$(LALFRAMEPREFIX)/lib/pkgconfig:$(LALXMLPREFIX)/lib/pkgconfig \
#	./configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) \
#	    --prefix=$(PREFIX) \
#	    --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info \
#	    --enable-nightly=no \
#	    --enable-frame --enable-metaio \
#	    --disable-debug

build: build-stamp

build-stamp:  config.status
	dh_testdir

# moved to install
#	$(MAKE)

	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp 

	-$(MAKE) cvs-clean
	-$(MAKE) distclean
	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	set -e; \
	for v in 2.4 2.5; do                                                         \
	PYTHON="python$$v"                                                    \
	CFLAGS="$(CFLAGS)"                                                    \
	PKG_CONFIG_PATH=$(FRAMEPREFIX)/lib/pkgconfig:$(METAIOPREFIX)/lib/pkgconfig:$(LALPREFIX)/lib/pkgconfig:$(LALSTOCHPREFIX)/lib/pkgconfig:$(LALFRAMEPREFIX)/lib/pkgconfig:$(LALXMLPREFIX)/lib/pkgconfig \
	./configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) \
	    --prefix=$(PREFIX)                                                \
	    --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info   \
	    --enable-nightly=no                                               \
	    --enable-frame --enable-metaio                                    \
	    --disable-debug                                                   \
	    --disable-gcc-flags ;                                                    \
	PYTHON="python$$v"                                                    \
	$(MAKE) ;                                                                    \
	PYTHON="python$$v"                                                    \
	$(MAKE) DESTDIR=$(CURDIR)/debian/lalapps install ;                           \
	PYTHON="python$$v"                                                    \
	$(MAKE) clean ;                                                              \
	done
	set -e; \
	for i in `find debian -mindepth 2 -type f ! -perm 755`; do       \
		if head -n1 $$i | grep -q '^#!' ; then                   \
		        chmod +x $$i;                                    \
		fi ;                                                     \
	done
	set -e; \
	for i in `find debian/lalapps/$(PREFIX)/bin -type f`; do      \
	        echo $$i;                                                \
	        if head -n1 $$i | grep -q '^#!.*python2\..' ; then         \
	                sed -i '1s/python2\../python/' $$i;             \
	        fi ;                                                     \
	done
	cp -p debian/lalapps-user-env.* $(CURDIR)/debian/lalapps/$(PREFIX)/etc/

binary-common: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs ChangeLog
	dh_installdocs
	dh_installexamples
#	dh_install
#	dh_installmenu
#	dh_installdebconf
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
	dh_python
#	dh_installinit
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
	dh_makeshlibs
	dh_installdeb
	LD_LIBRARY_PATH=$(PREFIX)/lib dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-common
.PHONY: build clean binary-common binary install 
