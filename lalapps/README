1. Introduction

Welcome to the LSC Applications Library (LALApps). The LALApps web site:

   http://www.lsc-group.phys.uwm.edu/daswg/projects/lalapps.html

contains many useful links for LALApps users and developers. 

There are two LALApps mail lists/archives which are shared with LAL. These are:

  LAL-Announce: general LALApps announcements including release announcements.
  http://www.lsc-group.phys.uwm.edu/mailman/listinfo.cgi/lal-announce

  LAL-Discuss: general LALApps discussion forum but not for filing bug reports
  http://www.lsc-group.phys.uwm.edu/mailman/listinfo.cgi/lal-discuss

This README file explains how to build and install LALApps for use on the
LSCdatagrid.


------------------------------------------------------------------------------

2. Get LAL from CVS

Go to the LAL web page:

   http://www.lsc-group.phys.uwm.edu/daswg/projects/lalapps.html

and download the README file from the README section of the page. Follow the
instructions in step 3 of the LAL README to download LAL from CVS and step 4
of the LAL README to create the various LAL build scripts.

Make sure you have set the LAL_LOCATION environment variable as described in
the LAL README.

Do NOT follow the LAL README.install. Insted return here and follow the
instructions below once you have followed steps 3 and 4 of the LAL README.

Do NOT follow step 8 of the LAL README (i.e. do not log out of the lscsoft CVS
archive.)


------------------------------------------------------------------------------

3. Get LALApps from CVS

The source code for LALApps is stored in the same lscsoft CVS archive as LAL.
You should have followed step 3 in the LAL README to log into the LAL CVS and
checkout LAL. Now you can checkout LALApps and build the install files by 
typing:

  cd ${LAL_LOCATION}/src
  cvs -d :pserver:USERNAME@gravity.phys.uwm.edu:2402/usr/local/cvs/lscsoft checkout lalapps
  cd lalapps
  ./00boot

Now follow the steps below to build and install the software required for
LALApps.

------------------------------------------------------------------------------

3. Important notes about required software

To build LALApps, you must have LAL installed. LAL requires the following
software to be installed:

	pkgconfig-0.15.0
	fftw-3.0.1 (both single- and double-precision libraries required)
	gsl-1.5
	libframe-6.14
	libmetaio-5.4

Step 4 below describes the various options for getting the software. If you do
NOT have LIGOtools installed, you can skip to step 4 now, otherwise read the
rest of this section.

Note that if you have LIGOtools installed, you must REMOVE the lal and lalapps
that are installed by LIGOtools since these will cause conflicts with the
versions you are going to build from CVS. To determine if you have LAL and
LALApps by LIGOtools, type

   ligotools_list

This will list all your LIGOtools packages, for example

LIGOTOOLS is /home/duncan/projects/ligotools
  Package      Active     Other installed versions
 ---------    --------   --------------------------
  Fr           v6r15      
  FrContrib    v6r15      v6r12a
  dataflow     5.5        
  fftw         3.0.1     
  guild        3.31.0     3.9.3, 3.22.1, 3.20, 3.17.1, 3.14.1
  lal          3.0        
  lalapps      3.0        
  segments     1.5        1.4, 1.2, 1.0
  tclexe       8.4.7      8.3.4

If you have lal or lalapps listed as active, then type

   ligotools_uninstall lalapps <version>

where <version> is the active version of LALApps that you have installed,
given by ligotools_list (e.g. 3.0 in the above example). Answer yes to all the
questions asking if you really want to removed it. Then type

   ligotools_uninstall lal <version>

where <version> is active the version of LAL that you have installed, given by
ligotools_list. Answer yes to all the questions asking if you really want to
removed it. You are now ready to continue.


------------------------------------------------------------------------------

4. Decide how you want install the required software

You have the following options for installing the required software. Choose
the one that suits you best and then follow the relevant instructions below.

 -- you have your own desktop or laptop machine without some or all 
    of the required software		----> follow step 5.1 below

 -- you have a LIGOtools distribution (that you control) installed on 
    your machine 			----> follow step 5.2 below

 -- you are logged into an LSCdatagrid cluster machine and do not 
    have root access (for example the UWM cluster or one of the LIGO
    lab clusters)			----> follow step 5.3 below

 -- you are the system administrator of an LSC cluster machine or you 
    want to install the required software as RPMs or .deb files on 
    your machine			----> follow step 5.4 below


------------------------------------------------------------------------------

5.1 Installing the required software from source

Choose a directory in which to install the required software (i.e. the
software other than LAL and LALApps). 

This may be under your home directory or a system directory if you have root
access on your machine. For example you may choose ${HOME}/opt/lscsoft or
/opt/lscsoft

In these instructions, we assume that you choose ${HOME}/opt/lscsoft 
If you choose another location, change the apropriate lines below.

Add the following to your .profile if you use a bourne shell (e.g. bash):
        
  LSCSOFT_LOCATION=${HOME}/opt/lscsoft   # <- change this as appropriate
  export LSCSOFT_LOCATION
  if [ -f ${LSCSOFT_LOCATION}/etc/lscsoft-user-env.sh ] ; then
    . ${LSCSOFT_LOCATION}/etc/lscsoft-user-env.sh
  fi

  LAL_LOCATION=${HOME}/opt/lal           # <- change this as appropriate
  export LAL_LOCATION
  if [ -f ${LAL_LOCATION}/etc/lal-user-env.sh ] ; then
    . ${LAL_LOCATION}/etc/lal-user-env.sh
  fi
        
If you are using a C shell (e.g., tcsh), instead add these lines to
your .login:

  setenv LSCSOFT_LOCATION ${HOME}/opt/lscsoft   # <- change this as appropriate
  if ( -r ${LSCSOFT_LOCATION}/etc/lscsoft-user-env.csh ) then
    source ${LSCSOFT_LOCATION}/etc/lscsoft-user-env.csh
  endif

  setenv LAL_LOCATION ${HOME}/opt/lal           # <- change this as appropriate
  if ( -r ${LAL_LOCATION}/etc/lal-user-env.csh ) then
    source ${LAL_LOCATION}/etc/lal-user-env.csh
  endif

Now log out and log back in to make sure these environment variables are set.

To install the pre-requisite software type:

  cd ${LAL_LOCATION}/src/lal
  doc/lal-preinstall.sh

This will get, build and install all the necessary software. If you want to
know what the script doc/lal-preinstall.sh does, you may look at the LAL
README.install file.

Make sure you have access to the software you just installed. You can either
log out and log back in (safest) or if you run a bourne shall (e.g. bash)
type:

  source ${LSCSOFT_LOCATION}/etc/lscsoft-user-env.sh

or if you run a C-shell (e.g. tcsh) type:
  
  source ${LSCSOFT_LOCATION}/etc/lscsoft-user-env.csh

Now build and install LAL by typing:

  cd ${LAL_LOCATION}/src/lal
  ./configure --prefix=${LAL_LOCATION} --disable-mpi
  make
  make install

Make sure you have access to the software you just installed. You can either
log out and log back in (safest) or if you run a bourne shall (e.g. bash)
type:

  source ${LAL_LOCATION}/etc/lal-user-env.sh

or if you run a C-shell (e.g. tcsh) type:
  
  source ${LAL_LOCATION}/etc/lal-user-env.csh

Now build and install LALApps by typing the following. If you want to build
LALApps to run in the condor standard universe, and you have condor installed
on the machine that you are building on, add --enable-condor to the configure
options:

  cd ${LAL_LOCATION}/src/lalapps
  ./configure --prefix=${LAL_LOCATION}
  make
  make install

You are now ready to use LALApps! Please see the LALApps README.contrib for
help on adding code to LALApps and the LALApps README.bugs for information on
reporting bugs.


------------------------------------------------------------------------------

5.2 Installing the required software via LIGOtools. 

NOTE: THE LIGOTOOLS INSTRUCTIONS HERE DO NOT CURRENTLY WORK SINCE GSL AND
FFTW3 ARE NOT YET IN LIGOTOOLS. AS A TEMPORARY MEASURE PLEASE USE STEP 5.1
ABOVE. 

Make sure you remove the LIGOtools lal and lalapps as described in step 2.

Type 

  ligotool_list
  
and make sure you have the following packages installed and the listed version
is active. You may have other packages installed as well (but NOT lal and
lalapps) and can ignore these:

LIGOTOOLS is /home/duncan/projects/ligotools
  Package      Active     Other installed versions
 ---------    --------   --------------------------
  Fr           v6r15      
  dataflow     5.5        
  fftw         3.0.1
  gsl          1.5

Note that pkgconfig is not required for if you are getting the required
software from LIGOtools.

Now build LAL as follows:

   cd ${LAL_LOCATION}/src/lal
   ./configure --prefix=${LAL_LOCATION} \
     --with-extra-cppflags="-I${LIGOTOOLS}/include" \
     --with-extra-ldflags="-L${LIGOTOOLS}/lib" --disable-mpi
   make
   make install

If you run a bourne shell (e.g. bash) type:

   source ${LAL_LOCATION}/etc/lal-user-env.sh

If you run a C-shell (e.g. tcsh) type:

   source ${LAL_LOCATION}/etc/lal-user-env.csh

Now build LALApps as follows. If you want to build LALApps to run in the
condor standard universe, and you have condor installed on the machine that
you are building on, add --enable-condor to the configure options:

   cd ${LAL_LOCATION}/src/lalapps
   ./configure --prefix=${LAL_LOCATION} \
     --with-extra-cppflags="-I${LIGOTOOLS}/include -I{LAL_PREFIX}/include" \
     --with-extra-ldflags="-L${LIGOTOOLS}/lib -L${LAL_PREFIX}/lib"
   make
   make install

LALApps is now installed and ready for use. The binaries will be installed in
the directory 

   ${LAL_LOCATION}/bin

which is added to your path by the lal-user-env script.

Add the following to your .profile if you use a bourne shell (e.g. bash):
        
  LAL_LOCATION=${HOME}/opt/lal           # <- change this as appropriate
  export LAL_LOCATION
  if [ -f ${LAL_LOCATION}/etc/lal-user-env.sh ] ; then
    . ${LAL_LOCATION}/etc/lal-user-env.sh
  fi
        
If you are using a C shell (e.g., tcsh), instead add these lines to
your .login:

  setenv LAL_LOCATION ${HOME}/opt/lal           # <- change this as appropriate
  if ( -r ${LAL_LOCATION}/etc/lal-user-env.csh ) then
    source ${LAL_LOCATION}/etc/lal-user-env.csh
  endif


You are now ready to use LALApps! Please see the LALApps README.contrib for
help on adding code to LALApps and the LALApps README.bugs for information on
reporting bugs.


------------------------------------------------------------------------------

5.3 Installing on a LSCdataGrid cluster machine




------------------------------------------------------------------------------


5.4 Installing the required software as RPMs or .debs from a repository

WARNING: These instructions are intended to be helpful for users of RPM who
wish to install the software required by LAL system-wide.  However, these
instructions and the provided RPMs are not officially supported, and may not
work on all systems.

The commands listed below are appropriate for a Bourne-shell (e.g., bash);
they will need to be modified appropriately for C-shells (e.g., tcsh).
This is where to get sources:
        
        LALRPMURL=http://www.lsc-group.phys.uwm.edu/lal/sources/rpms

get required autoconf, automake, fftw3, gsl, libframe, and libmetaio
you can use "lynx -dump" or "wget -O-" instead of "curl"

        curl $LALRPMURL/fftw3-3.0.1-2.i386.rpm > fftw-3.0.1-2.i386.rpm
        curl $LALRPMURL/fftw3-devel-3.0.1-2.i386.rpm > fftw-devel-3.0.1-2.i386.rpm
        curl $LALRPMURL/gsl-1.5-1.i386.rpm > gsl-1.5-1.i386.rpm
        curl $LALRPMURL/gsl-devel-1.5-1.i386.rpm > gsl-devel-1.5-1.i386.rpm
        curl $LALRPMURL/libframe-6.14-1.i386.rpm > libframe-6.14-1.i386.rpm
        curl $LALRPMURL/libframe-devel-6.14-1.i386.rpm > libframe-devel-6.14-1.i386.rpm
        curl $LALRPMURL/libframe-utils-6.14-1.i386.rpm > libframe-utils-6.14-1.i386.rpm
        curl $LALRPMURL/libmetaio-5.4-3.i386.rpm > libmetaio-5.4-3.i386.rpm
        curl $LALRPMURL/libmetaio-devel-5.4-3.i386.rpm > libmetaio-devel-5.4-3.i386.rpm

now login as root and install the RPMs

        rpm -Uvh fftw-3.0.1-2.i386.rpm fftw-devel-3.0.1-2.i386.rpm
        rpm -Uvh gsl-1.5-1.i386.rpm gsl-devel-1.5-1.i386.rpm
        rpm -Uvh libframe-6.14-1.i386.rpm libframe-devel-6.14-1.i386.rpm libframe-utils-6.14-1.i386.rpm
        rpm -Uvh libmetaio-5.4-3.i386.rpm libmetaio-devel-5.4-3.i386.rpm


1.3 BUILDING REQUIRED SOFTWARE FROM SOURCE RPMS

If you cannot use these binary RPMs and you wish to build from source RPMs,
follow these instructions.

first download the source RPMs

        curl $LALRPMURL/fftw3-3.0.1-2.src.rpm > fftw3-3.0.1-2.src.rpm
        curl $LALRPMURL/gsl-1.5-1.src.rpm > gsl-1.5-1.src.rpm
        curl $LALRPMURL/libframe-6.14-1.src.rpm > libframe-6.14-1.src.rpm
        curl $LALRPMURL/libmetaio-5.4-3.src.rpm > libmetaio-5.4-3.src.rpm

now login as root and build binary RPMs from the source RPMs (this will
take a very long time)

        rpmbuild --rebuild fftw3-3.0.1-2.src.rpm
        rpmbuild --rebuild gsl-1.5-1.src.rpm
        rpmbuild --rebuild libframe-6.14-1.src.rpm
        rpmbuild --rebuild libmetaio-5.4-3.src.rpm

finally install the new binary RPMs

        cd /usr/src/redhat/RPMS
        rpm -Uvh i386/fftw3-3.0.1-2.i386.rpm
        rpm -Uvh i386/gsl-1.5-1.i386.rpm
        rpm -Uvh i386/gsl-devel-1.5-1.i386.rpm
        rpm -Uvh i386/libframe-6.14-1.i386.rpm
        rpm -Uvh i386/libframe-devel-6.14-1.i386.rpm
        rpm -Uvh i386/libmetaio-5.4-3.i386.rpm
        rpm -Uvh i386/libmetaio-devel-5.4-3.i386.rpm

