#!/usr/bin/env tclshexe

# File: runComputeStackSlideSUM.tclsh Started: 12/10/03
# Author: Greg Mendell

# Currently no logs or records are kept
#set LOGFILE "ComputeStackSlideSUM.log";
#set RECORDFILE "ComputeStackSlideSUM.rec";

# Revisions
# 01/21/04 gam; Set job file name on the command line.
# 01/27/04 gam; Make sure script can handle search of sky positions and spindowns.
# 01/28/04 gam; change sft_directory to sft_path_pattern = path + pattern to match.
# 02/27/04 gam; add option to output arguments for condor sub file rather than run.
# 02/27/04 gam; change puts to Print; use Print procedure to control output to stdout; allow silent running when ::CONDOR_MODE.
# 02/27/04 gam; clean up run option code.
# 04/15/04 gam; add optional debug_option as last command line argument.
# 04/15/04 gam; update instructions.
# 04/26/04 gam; change example jobs for intial entry into LALapps.
# 09/03/04 gam; update examples to work with new test SFTS in LALapps.
# 11/22/04 gam; if == 0 then set band_width = 1/sft_time
# 12/06/04 gam; include defaults for parameters set in template_file; allow more parameters to be set in this file
# 05/13/05 gam; add searchParameterSpaceFlag
# 05/14/05 gam; add searchLinesAndHarmonicsFile
# 07/17/05 gam; Change ...Deriv5 command line arguments to ones that control new Monte Carlo (MC) options
# 09/07/05 gam; Change searchMaxMCfracErr to absolute error searchMaxMCErr
# 09/08/05 gam; Add searchDterms with default equal to 32, which gives Dterms used with MC fast SFT generation and LALDemod.

set ::CONDOR_MODE 0; # #02/27/04 default is false.
set ::RUN 0;         #02/27/04 default value false.
set ::DEBUG_OPTION_FLAG 0; # 04/15/04 gam

proc Print {thisString} {
   # if ($::CONDOR_MODE) # 04/15/04 gam
   if {$::CONDOR_MODE || (($::DEBUG_OPTION_FLAG==1) && $::RUN)} {
     # Just return; run silently.
   } else {
     puts $thisString;
   }
}

proc Exit {code} {
	global argv0;
	# delete temporary files.
        if {$code > 1} {
	    puts "The getOneStackSlideSUM script finished with an error."
	} elseif {$code == 1} {
	   # Displayed help.  Just quit without a message.
	} else {
            Print "\nThe $argv0 script has finished.";
	}
	exit $code;
}

#-- Check whether user specified all needed command-line arguments
#if { $argc < 13 || $argc > 14} # 04/15/04 gam
set firstArg " "; # 04/15/04 gam
if { $argc < 13 || $argc > 15} {
    Print " ";
    #Print "runs ComputeStackSlideSums to get one SUM";
    Print "Driver script for ComputeStackSlideSums\n";
    Print "See also README_ComputeStackSlideSums for more about ComputeStackSlideSums.";    
    Print "See also README_CommandLineArgument for a complete description of the ComputeStackSlideSums command line arguments.\n";
    Print "Usage:";
    Print " ";    
    #Print "$argv0 <ifo> <start_time> <duration> <template_freq> <band_width> <sft_time> <num_sfts> <sft_directory> <template_file> <sun_edat_file> <earth_edat_file> <output_file> \[<run>\]";    
    # Print "$argv0 <ifo> <start_time> <duration> <template_freq> <band_width> <sft_time> <num_sfts> <sft_directory> <template_file> <job_file> <sun_edat_file> <earth_edat_file> <output_file> \[<run>\]"; # 01/21/04 gam
    #Print "$argv0 <ifo> <start_time> <duration> <template_freq> <band_width> <sft_time> <num_sfts> <sft_path_pattern> <template_file> <job_file> <sun_edat_file> <earth_edat_file> <output_file> \[<run>\]"; # 01/28/04 gam
    #Print "$argv0 <ifo> <start_time> <duration> <template_freq> <band_width> <sft_time> <num_sfts> <sft_path_pattern> <template_file> <job_file> <sun_edat_file> <earth_edat_file> <output_file> \[<run|condor>\]"; # 02/27/04 gam
    Print "$argv0 <ifo> <start_time> <duration> <template_freq> <band_width> <sft_time> <num_sfts> <sft_path_pattern> <template_file> <job_file> <sun_edat_file> <earth_edat_file> <output_file> \[<run|condor>\] \[<debug_option>\]"; # 04/15/04 gam
    # 04/15/04 gam; added lines between here and Print Usage:
    if { $argc == 0} {
       Print "\nRun $argv0 -h to get further help on using this script.\n"; 
       Exit 1;       
    } elseif { $argc > 0} {
       set firstArg [lindex $argv 0];
       if {$firstArg != "-h"}  {
         Print "\nError! Some required arguments were missing or incorrect. See usage below.\n";
       }
    }            
    Print " ";
    Print "ifo:              Nickname of interometer to run on (H1, H2, L1, or G1).";
    Print "start_time:       Start time.";
    Print "duration:         Times to run on = \[start_time, start_time + duration).";
    Print "template_freq:    Central frequency to run on.";
    Print "band_width:       Band width to run = \[template_freq - band_width/2 , template_freq + band_width/2).";
    Print "                  Set band_width == 0 to output result for just the template_freq bin (with bin_width = 1.0/sft_time)."; # 11/22/04 gam
    Print "sft_time:         Time baseline used to generate SFTs in seconds (e.g. 60 or 1800).";
    Print "num_sfts:         Actual number of exiting SFTs for times specified (not equal to duration/sft_time if gaps exists).";
    # Print "sft_directory:    Directory with SFTs in PULG group format."; #01/28/04 gam
    Print "sft_path_pattern: Path to SFTs in PULG format plus pattern to match names of SFT files.;"
    Print "                  For example use \"../*SFT.*\" to match SFTs in the directory above; note \"\" are needed.";
    #Print "template_file:    File that sets pulsar parameters."; # 01/27/04 gam
    Print "template_file:    File that sets template parameters e.g., for a pulsar or a search of sky positions and spindowns.";
    #Print "job_file:         File that sets FILTERPARAMS (including pulsar params and command line args from this script.)"; # 01/21/04 gam # 01/27/04 gam
    Print "job_file:         File that sets FILTERPARAMS (including template params and command line args from this script).";
    Print "sun_edat_file:    File with sun ephemeris data.";
    Print "earth_edat_file:  File with earth ephemeris data.";
    Print "output_file:      File for output of results in ascii format.";
    Print "run|condor:       Optional: give either run, condor, or leave blank.";  # 02/27/04 gam
    Print "                    1. Give \"run\" to run this job in standalone mode.";
    Print "                    2. Give \"condor\" to output argments for condor job."; 
    Print "                    3. Leave blank to see standalone cmd without running it.";
    Print "debug_option:     Optional: give a number or leave blank. This is the debugOptionFlag for ComputeStackSlideSums.";  # 04/15/04 gam
    Print "                    1. If \"0\" ComputeStackSlideSums provides no debugging.";
    Print "                    2. If \"1\" ComputeStackSlideSums prints command line arguments to stdout.";
    Print "                       (The format is that of a tcl resource file that can be used to set the arguments.)";
    Print "                    3. If \"2\" ComputeStackSlideSums prints a table with events to stdout.";
    Print "                    4. See README_CommandLineArguments for more debugging options.";
    Print " ";
    Print "The command line debug_option also provides an easy way to validate the StackSlide code!";
    Print "For fake data with a signal and no noise, run on the exact template for the signal with the";
    Print "command line debug_option bit for 8 set. This sets the bin with max power to 1 in each SFT,";
    Print "all other bins to 0. If the debug_option bit for 16 is also set, the SFT bin either side of that"
    Print "with max power is also set to 1. The StackSlide power should equal the number of SFTs, to within";
    Print "about 4 percent, for debug_option & 8 > 0 and exactly equal this for debug_option & 24 > 0.";
    Print "See documentation for debugOptionFlag in README_CommandLineArguments for further information."
    Print " ";
    Print "Also note that if template_freq is set to \"default\" then the value for templateFreq0 set in the template_file will be used.";
    Print " ";
    Print "Example 1 (run in standalone mode):";
    Print " ";
    Print "$argv0 H1 731210229 18000 300.2 .05 1800 10 \"../*SFT.*\" testPulsar.params runStackSlideSearch.job \$LALPREFIX/share/lal/sun00-04.dat \$LALPREFIX/share/lal/earth00-04.dat myout.txt run";
    Print " ";    
    Print "Returns the StackSlide SUM for H1 for a .05 Hz band centered on 300.2 Hz using 10 SFTs of duration 1800 s located in the directory above for GPS times \[731210229, 731210229 + 18000), the parameters specified in testPulsar.params, and the Ephemeris data in \$LALPREFIX/share/lal/sun00-04.dat and \$LALPREFIX/share/lal/earth00-04.dat.";
    Print " ";    
    Print "Example 2 (run in standalone mode with debug_option 1):"; # 04/15/04 gam
    Print " ";
    Print "$argv0 H1 731210229 18000 300.2 .05 1800 10 \"../*SFT.*\" testPulsar.params runStackSlideSearch.job \$LALPREFIX/share/lal/sun00-04.dat \$LALPREFIX/share/lal/earth00-04.dat myout.txt run 1";
    Print " ";
    Print "Same as example 1, but the command line arguments are printed to the screen in the form of a tcl resource file.";
    Print " ";
    Print "Example 3 (run in standalone mode with debug_option 2):";
    Print " ";
    Print "$argv0 H1 731210229 18000 300.2 .05 1800 10 \"../*SFT.*\" testPulsar.params runStackSlideSearch.job \$LALPREFIX/share/lal/sun00-04.dat \$LALPREFIX/share/lal/earth00-04.dat myout.txt run 2";
    Print " ";
    Print "Example 4 (run in standalone mode with debug_option 10 or 26 for code validation; option 26 is shown here):";
    Print " ";
    Print "$argv0 H1 731210229 18000 300.2 .05 1800 10 \"../*SFT.*\" testPulsar.params runStackSlideSearch.job \$LALPREFIX/share/lal/sun00-04.dat \$LALPREFIX/share/lal/earth00-04.dat myout.txt run 26";
    Print " ";
    Print "These options validate the code! With debug_option == 26 the power for data with a loud signal or without noise should equal the number of SFTs. See more about the debug_option above.";
    Print " ";
    Print "Example 5 (output condor arguments):";
    Print " ";    
    Print "$argv0 H1 731210229 18000 300.2 .05 1800 10 \"../*SFT.*\" testPulsar.params runStackSlideSearch.job \$LALPREFIX/share/lal/sun00-04.dat \$LALPREFIX/share/lal/earth00-04.dat myout.txt condor";
    Print " ";
    Print "Use the condor option with \">> condorsubmitfile.sub\" to append this job to a condor submit file.";
    Print " ";
    Print "Example 6 (test binary case):";
    Print " ";    
    Print "$argv0 H1 731210229 18000 300.2 .05 1800 10 \"../*SFT.*\" testBinaryPulsar.params runStackSlideBinarySearch.job \$LALPREFIX/share/lal/sun00-04.dat \$LALPREFIX/share/lal/earth00-04.dat myoutbinary.txt run";
    Print " ";
    if { $argc > 0} {
       if {$firstArg != "-h"}  {
         # Print "\nError! Some required arguments were missing. See syntax given above.\n"; # 02/27/04 gam
         Print "\nError! Some required arguments were missing or incorrect. See usage above.\n"; # 04/15/04 gam
         Exit 2;
       } else {
         Exit 1;       
       }
    } else {
       Exit 1;
    }
}

# Names of parameters used in the script
set ifo [lindex $argv 0];
set start_time [lindex $argv 1];
set duration [lindex $argv 2];
set template_freq [lindex $argv 3];
set band_width [lindex $argv 4];
set sft_time [lindex $argv 5];
set num_sfts [lindex $argv 6];
set sft_path_pattern [lindex $argv 7];
set template_file [lindex $argv 8];
set job_file [lindex $argv 9]; # 01/21/04 gam
set sun_edat_file [lindex $argv 10];
set earth_edat_file [lindex $argv 11];
set output_file [lindex $argv 12];

# Check if this job is to actually run.
#if {$argc == 14} # 04/15/04 gam
if {$argc >= 14} {
  if {[lindex $argv 13] == "run" || [lindex $argv 13] == "-run"} {
      set ::RUN 1;
  } elseif {[lindex $argv 13] == "condor" || [lindex $argv 13] == "-condor"} {
      set ::CONDOR_MODE 1; # 02/27/04 gam; output arguments for condor job; note default is set to 0 above.
  } else {
      set ::DEBUG_OPTION_FLAG [lindex $argv 13]; # 04/15/04 gam; allow for ::DEBUG_OPTION_FLAG
  }
  if {$argc == 15} {
     set ::DEBUG_OPTION_FLAG [lindex $argv 14];  # 04/15/04 gam; allow for ::DEBUG_OPTION_FLAG
     if {!$::RUN && !$::CONDOR_MODE} {
        set ::CONDOR_MODE 0; # needed to not suppress Print of error message.
        set ::DEBUG_OPTION_FLAG 0; # needed to not suppress Print of error message.     
        Print " ";
        Print "Error! Did not understand the argument before the debug_option.";
        Print [concat "It should be \"run\", \"condor\", or blank). It was: " [lindex $argv 13]];
        Print "Note that the debug_option comes after \"run\" or \"condor\" when these are used.";
        Print " ";
        Exit 2;
     }
  }
  #puts "::DEBUG_OPTION_FLAG = $::DEBUG_OPTION_FLAG";
  if {[catch {expr 1*$::DEBUG_OPTION_FLAG} catchOut]}  {
        set catchOut "Tried to set debug_option to $::DEBUG_OPTION_FLAG; error was $catchOut.";
        set ::CONDOR_MODE 0; # needed to not suppress Print of error message.
        set ::DEBUG_OPTION_FLAG 0; # needed to not suppress Print of error message.
        Print " ";
        #Print [concat "Error! Did not understand the last argument (should be \"run\", \"condor\", or blank): " [lindex $argv 13]];
        Print "Error! Did not understand the last argument.";
        Print "It should be \"run\", \"condor\", the debug_option, or blank).";
        Print "The debug_option, if given, must be just a number";
        Print "The debug_option, if given, must come after \"run\" or \"condor\".";
        Print "$catchOut";
        Print " ";
        Exit 2;
  }
} 

# 12/06/04 gam; Set defaults for all values set in the template_file:
set templateGPSEpochStartTime $start_time; # 12/06/04 gam; UINT4 GPS seconds at the detector giving SSB epoch reference time.
set templateGPSEpochStartTimeNan 0;        # 12/06/04 gam; UINT4 GPS nanoseconds at the detector giving SSB epoch reference time.

set targetName "Unknown";

set searchParameterSpaceFlag 0; # 05/13/05 gam;

set searchDterms 32; # 09/08/05 gam;

set searchWeightFlag 0;

set searchOrientationAngle 0.0;    
set searchCosInclinationAngle 0.0; 

set searchTestFlag 0;

set searchLinesAndHarmonicsFile "None";  # 05/14/05 gam;

set searchPriorResultsFile      "None";  # 05/24/05 gam;
set searchMaxMCinterations           1;  # 05/25/05 gam;
set searchMaxMCErr               0.005;  # 05/25/05 gam;
set searchNumMCInjections            0;  # 07/17/05 gam;
set searchNumMCRescalings            0;  # 07/17/05 gam;
set searchRescaleMCFraction          0;  # 07/17/05 gam;
set searchParameterMC                0;  # 07/17/05 gam;

set searchParameterSpaceFile    "None";  # 05/24/05 gam;

set templateFreq0 0.0;  

set templateStartRA 0;
set templateStopRA  0;
set templateDeltaRA 0;
set templateNumRA   0;

set templateStartDec 0;
set templateStopDec  0;
set templateDeltaDec 0;
set templateNumDec   0;

set templateNumSpinDown 0; 

set templateStartFDeriv1 0;
set templateStopFDeriv1  0;
set templateDeltaFDeriv1 0;
set templateNumFDeriv1   0;

set templateStartFDeriv2 0;
set templateStopFDeriv2  0;
set templateDeltaFDeriv2 0;
set templateNumFDeriv2   0; 

set templateStartFDeriv3 0;
set templateStopFDeriv3  0;
set templateDeltaFDeriv3 0;
set templateNumFDeriv3   0; 

set templateStartFDeriv4 0;
set templateStopFDeriv4  0;
set templateDeltaFDeriv4 0;
set templateNumFDeriv4   0; 

#set templateStartFDeriv5 0;
#set templateStopFDeriv5  0;
#set templateDeltaFDeriv5 0;
#set templateNumFDeriv5   0;

set templateOrbitalEccentricity 0;
set templatealphaSX1 0;
set templatedeltaSX1 0;
set templateArgPeriapse 0;  
set templateSMAcentral 0; 
set templatedeltaSMA 0;
set binaryFlag 0;
set templatenMaxSMA 0;
set templatenMaxTperi 0;

set searchThresholdFlag  0;
set searchThreshold1     0;
set searchThreshold2     0;
set searchThreshold3     0;
set searchThreshold4     0;
set searchThreshold5     0;
set searchMaxWidthBins   0;

set searchOutputSUMFlag  0;
set searchOutputEventFlag 0;
set searchKeepThisNumber  0;

set searchNormalizationFlag 4;  # default is to use running median
set searchRunningMedianBlockSize 50;
set searchNormalizationParameter 0; # not used with running median

source $template_file;

# Check whether to use default value of template_freq in tmpTemplateFile.
if {$template_freq == "default"} {
   # Set up to use the default value.
   set template_freq $templateFreq0;
   Print "Using default value for template_freq = $templateFreq0.";
} else {
   # Override the default value with the input value.
   set templateFreq0 $template_freq;
}

# Set parameters that can be used by $job_file.
set ANALYSIS_START_TIME $start_time;
set SAMPLE_TIME $duration;  
if {$band_width == "0"} {
  set band_width [expr 1.0/$sft_time];
  set INPUTSUMF0 $template_freq;
  set INPUTSUMBAND $band_width;
} else {
  set INPUTSUMF0 [expr $template_freq - $band_width/2.0];
  set INPUTSUMBAND $band_width;
}
set INPUTSFTTIME $sft_time;
set IFONICKNAME $ifo;
set NUMSFTS $num_sfts;

# Source the job file.
# source runComputeStackSlideSUM.job; # 01/21/04 gam
source $job_file;

# Setting the MAIN command:

#set cmd "exec ./ComputeStackSlideSums $FILTERPARAMS $sun_edat_file $earth_edat_file $sft_path_pattern $output_file"; # 04/15/04 gam
if { $binaryFlag == "0" } {
set cmd "exec ./ComputeStackSlideSums $FILTERPARAMS $sun_edat_file $earth_edat_file $sft_path_pattern $output_file $::DEBUG_OPTION_FLAG";
} else {
set cmd "exec ./ComputeStackSlideSums $FILTERPARAMS $sun_edat_file $earth_edat_file $sft_path_pattern $output_file $::DEBUG_OPTION_FLAG $FILTERBINARYPARAMS"; }
#05/02/16 vir

Print "\ncommand = $cmd\n";

if {$::RUN} {
  catch {eval $cmd} result;
  # Print $result;
  puts $result; # 04/15/04 gam; always print the result regardless if printing is suppressed for other reasons; see Print procedure.
} elseif {$::CONDOR_MODE} {
  #set condorArgs "arguments = $FILTERPARAMS $sun_edat_file $earth_edat_file $sft_path_pattern $output_file"; # 04/15/04 gam
  set condorArgs "arguments = $FILTERPARAMS $sun_edat_file $earth_edat_file $sft_path_pattern $output_file $::DEBUG_OPTION_FLAG";  
  puts " ";
  puts $condorArgs;
  puts "queue";
} else {
  Print "Did NOT run command.  Give run as last argument to run this command.\n";
}

Exit 0;
