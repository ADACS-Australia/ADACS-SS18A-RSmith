1. Basic summary:  

ComputeStackSlideSums inputs blocks of frequency domain data for a sequence of times from SFTs, stacks the power for each frequency for each SFT, slides to correct for doppler shifts and intrinsic frequency evolution, and sums.  Depending on how certain command line arguments are set, the code outputs xml tables with process, event, and summary information and/or the sums in ascii format. It can also output an estimate of the PSD for each input SFT.

The driver script for running the code is runComputeStackSlideSUM.tclsh. This script requires that you have tclshexe in your path. This will be true if you have installed and set up ligotools. Run this script with no command line arguments and with the -h option to learn how to use it.

The driver script, along with a template_file and a job_file sets up the command line arguments for ComputeStackSlideSums. See README_CommandLineArguments for a complete description of the command line arguments. Note that README_CommandLineArguments also acts as an example tcl resource file for setting these arguments (which can be used in place of the driver script).

The driver script first sources the template_file and then the job_file it is given. Thus set filter parameters that change often in the template_file and the rest in a corresponding job_file. The job_file must set FILTERPARAMS, which is a space delimited list of all the command line arguments for ComputeStackSlideSums, except sun_edat_file ,earth_edat_file, sft_path_pattern, and output_file. The runComputeStackSlideSUM.tclsh script appends these to the end of $FILTERPARAMS.

2. How to build the code:  

a. Run "make -f Makefile_ComputeStackSlideSumsCondor" or "make -f Makefile_ComputeStackSlideSumsCondor" to build ComputeStackSlideSums.

b. If this does not work, check the following:

i. LAL must be built and installed WITHOUT the "--disable-static" flag set during configure, so that liblal.a and liblalsupport.a exist.

ii. Check that $LALPREFIX is set up.
 
If the include files and library files you need are not under these directories, then edit the Makefile to give the locations on your system.  The lines to consider are:

# header file directories
LAL_INCLUDE=$(LALPREFIX)/include
USR_INCLUDE=/usr/include
 
# library file directories
LAL_LIB=$(LALPREFIX)/lib
USR_LIB=/usr/lib

3. Run "./runComputeStackSlideSUM.tclsh" and "./runComputeStackSlideSUM.tclsh -h" to get instructions on how to run the code.

4. For a simple test, run one of the examples jobs indicated in the instructions from Step 3.

This should output myout.txt and myout.txt.xml. Compare the output with myout.txt.sav. 

5. For a description of the filter parameters that are passed to ComputeStackSlideSums see README_CommandLineArguments. See runComputeStackSlideSUM.tclsh, testPulsar.params, and runComputeStackSlideSUM.job to see how these are set by the script.

6. Files:

a. ComputeStackSlideSums.c and ComputeStackSlideSums.h:  Contains "main".  The main driver code.

b. DriveStackSlide.c and DriveStackSlide.h: Contains driver type functions used by the main driver code.

c. StackSlide.c and StackSlide.h: Contains the core algorithm functions; as appropriate these will be transferred to LAL.

d. testPulsar.params:  Sets source parameters for an example pulsar.  Used in the test in Step 4 above.

e. sun00-04.dat and earth00-04.dat:  Files from LAL with ephemeris data.  Used in the test in Step 4 above.

f. SFT.nnnnn:  Files with test SFT data in the PULG group format.

g. Makefile and Makefile_ComputeStackSlideSums: The file used by "make" for building ComputeStackSlideSums. Makefile_ComputeStackSlideSums is just a backup of Makefile.
