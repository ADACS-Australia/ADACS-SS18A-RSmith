TODO (makefakedatata_v4)
-------------------------
* add possibility of generating Gaussian noise to add to signal

* implement more  _v2 features, like writing of time-series...

* double-check on "renormalization" for FFTs if using sub-set of bins

* understand why we throw away the last freqency-bin in FFT -> SFT ?

done
----

* fix bug of zeroes in beginning/end of time-series
	(-> see makefakedata_v2 for that)
  => used temporary fix now, but really should check LALSimulateCoherentGW()

* turn timestamps completely into INT's for SFTs? (NO)
 
* allow transfer-function==NULL -> use unit transfer in this case
	-> NULL seems ok

* check source-pos coordinates and "normalize" them if they 
   are 'non-canonical' -> mention in documentation 

* complete LALSignalToSFTs() (missing: add noise-SFTs)
	(done)

* write some documentation
 (done, in LAL)

* check if timestamps-asked for == timestamps-delivered... 
	(i.e. timestamps consistent with sampling of time-series?)
  -> warning should be printed now, if lalDebugLevel>0, otherwise
     the SFTs simply get "nudged" (cf. documentation).

* move LALNormalizeSkyPosition() into LAL (+add documentation + tests)
  (done, currently in GeneratePulsarSignal.c)

* get leap-seconds from LALLeapSec()

* put phase-correction from heterodying into LALSignalToSFTs() (->Yousuke's Notes), 
  (done, using code from makefakedata_v2)

* use UserInput module and "clean-up" makefakedata_v4

* do MEASURE the FFTW-plan, and allow some plan-buffering!
  (does not seem to have much effect, maybe not worth it..?)

* prepare a "test suite" for pulsar-signal generation & Cie.
	--> test-check final SFTs against makefakedata_v2
  (DONE: current agreement seems very good: ~1e-3-1e-4 on average)

* allow binary-orbit input (should be trivial)
  (DONE, needs testing still)
