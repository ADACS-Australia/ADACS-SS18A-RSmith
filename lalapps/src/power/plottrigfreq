#!/usr/bin/python
#
# $Id$
#
# Copyright (C) 2006  Kipp C. Cannon
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

#
# =============================================================================
#
#                                   Preamble
#
# =============================================================================
#

from optparse import OptionParser
import matplotlib
matplotlib.use("Agg")
from matplotlib import figure
from matplotlib.backends.backend_agg import FigureCanvasAgg
import numarray

from glue.ligolw import ligolw
from glue.ligolw import array
from glue.ligolw import param
from pylal import llwapp

__author__ = "Kipp Cannon <kipp@gravity.phys.uwm.edu>"
__version__ = "$Revision$"[11:-2]
__date__ = "$Date$"[7:-2]


#
# =============================================================================
#
#                                 Command Line
#
# =============================================================================
#

def parse_command_line():
	parser = OptionParser(version="%prog CVS $Id$")
	parser.add_option("-v", "--verbose", action = "store_true", help = "be verbose")
	options, filenames = parser.parse_args()

	return options, (filenames or [None])


#
# =============================================================================
#
#                                    Input
#
# =============================================================================
#

def get_instrument(arrayelem):
	return llwapp.get_param(arrayelem.parentNode, "instrument").pcdata


#
# =============================================================================
#
#                                     Plot
#
# =============================================================================
#

def make_plot(data):
	fig = figure.Figure()
	FigureCanvasAgg(fig)
	fig.set_figsize_inches(16, 8)
	axes = fig.gca()
	axes.loglog()
	axes.grid(True)
	axes.plot(data[0], numarray.fabs(data[1]))
	axes.plot(data[0], numarray.fabs(data[2]))
	axes.plot(data[0], numarray.sqrt(data[1]**2.0 + data[2]**2.0))
	axes.set_xlim([min(data[0]), max(data[0])])
	axes.set_title("Frequency Decomposition of Confidence Time Series")
	axes.set_xlabel("Frequency (Hz)")
	axes.set_ylabel("Re, Im Magnitude")
	return fig


#
# =============================================================================
#
#                                     Main
#
# =============================================================================
#

options, filenames = parse_command_line()

for filename in filenames:
	doc = llwapp.load_filename(filename, options.verbose)
	for elem in array.getArraysByName(doc, "confidence_frequencies"):
		fig = make_plot(elem.array)
		fig.savefig("%s_%s.png" % (filename, get_instrument(elem)))
