; online inspiral pipeline configuration script.
; 
;
; this is the configuration file for the inspiral DAG generation program 
; lalapps_cbc_pipedown that creates a condor DAG to run the cbc
; pipedown dag.

[condor]
universe = vanilla
thinca_to_coinc = ../executables/ligolw_thinca_to_coinc
ligolw_sqlite = ../executables/ligolw_sqlite
dbsimplify = ../executables/ligolw_cbc_dbsimplify
repop_coinc = ../ligolw_cbc_repop_coinc
compute_durations = ../executables/ligolw_cbc_compute_durations
dbaddinj = ../executables/ligolw_cbc_dbaddinj
injfind = ../executables/ligolw_inspinjfind
dbinjfind = ../executables/ligolw_dbinjfind
cluster_coincs = ../executables/ligolw_cbc_cluster_coincs
mvsc_get_doubles = /bin/true
mvsc_train_forest = /bin/true
;/usr/bin/SprBaggerDecisionTreeApp
mvsc_use_forest = /bin/true
;/usr/bin/SprOutputWriterApp
mvsc_update_sql = /bin/true
mvsc_dag = ../executables/mvsc_dag
cfar = ../executables/ligolw_cbc_cfar
printlc = ../executables/ligolw_cbc_printlc
printsims = ../executables/ligolw_cbc_printsims
printmissed = ../executables/ligolw_cbc_printmissed
minifollowups = ../executables/minifollowups
plotslides = ../executables/ligolw_cbc_plotslides
plotcumhist = ../executables/ligolw_cbc_plotcumhist
plotifar = ../executables/ligolw_cbc_plotifar
plotfm = ../executables/ligolw_cbc_plotfm

[pipeline]
;   set node-tmp-dir to be a local directory that exists
;   on all the slave nodes
node-tmp-dir = ${PATH}
search-file-tag = INSPIRAL
coinc-file-tag = THINCA_SECOND
coinc-slide-file-tag = THINCA_SLIDE_SECOND
; set time label for search.
; will be end_time for inspiral and  start_time
; for ringdown
time-column = end_time

[input]
;   options common to all commands
ihope-segments-directory = ../segments

[plot_input]
;   options common to plotting commands
enable-output =

[thinca_to_coinc]
;   set options for thinca_to_coinc jobs
search = high_mass
chisq-index = 6.
effective-snr-factor = 50.
statistic = new_snr
;lars-id =

[ligolw_sqlite]
;   set options for ligolw_sqlite jobs
;preserve_ids =
;replace =

[dbsimplify]
;   set options for dbsimplify jobs
;vacuum =
;
[repop_coinc]
; establish what repop_coinc jobs to do; the following options
; must have corresponding sections with options given
; each section name will be added to the repop_coinc user_tag
ranking_stat =

[ranking_stat]
sngl-table = sngl_inspiral
coinc-table = coinc_inspiral
statistic-type = highstat
snr-power = 2.
livingston-factor = 1.
hanford-factor = 1.
virgo-run = 2
crossover-snr = 7.071
duration-threshold = 0.2
output-column = snr
virgo-factor = 1.
chisq-index = 6.

[compute_durations]
;   set options for compute_durations jobs
live-time-program = thinca

[dbaddinj]
;   set options for dbaddinj jobs
sim-table = sim_inspiral

[injfind]
;   set options for inspinjfind jobs
time-window = 1.
match-algorithm = inspiral
;force =
;comment = None

[dbinjfind]
exact_insp =
nearby_insp =

[exact_insp]
simulation-table = sim_inspiral
recovery-table = sngl_inspiral
match-criteria = endTime:endTime:0.01
map-label = insp_exact
rough-match = geocent_end_time:end_time:10
check-all-data = endTime:0.5
rough-all-data-check = end_time:10

[nearby_insp]
simulation-table = sim_inspiral
recovery-table = sngl_inspiral
match-criteria = endTime:endTime:1.0
map-label = insp_nearby
rough-match = geocent_end_time:end_time:10

[cluster_coincs]
snr_cluster =

[snr_cluster]
;   set static options for cluster_coinc jobs
;   following are required options
cluster-window = 10000
ranking-table = coinc_inspiral
ranking-stat = snr
rank-by = MAX
;   following are optional
group-by-ifos = 
param-name = minimum_duration
param-ranges = [0.0,0.2);[0.2,20.0)
;exclude-coincs = [all in h1,h2];[h1,h2 in all];[h2,l1 in h1,h2,l1]
vacuum = 

[cfar-uncombined]
;   set static options for cfar jobs that 
;   compute uncombined false alarm rates
output-column = false_alarm_rate
ranking-table = coinc_inspiral
ranking-stat = snr
rank-by = MAX
group-by-ifos = 
param-name = minimum_duration
param-ranges = [0.0,0.2);[0.2,20.0)
;exclude-coincs = [all in h1,h2];[h1,h2 in all];[h2,l1 in h1,h2,l1]

[cfar-combined]
;   set static options for cfar jobs that 
;   compute combined false alarm rates
output-column = combined_far
ranking-table = coinc_inspiral
ranking-stat = false_alarm_rate
rank-by = MIN

[cbc_print]
;   set static options common for printlc, printsims, and printmissed
daily-ihope-pages-location = https://ldas-jobs.ligo.caltech.edu/~cbc/ihope_daily

[printlc]
;   set static options for printlc jobs
coinc-table = coinc_inspiral
get-sngl-info = 
sngl-table = sngl_inspiral
ranking-stat = combined_far
rank-by = MIN
limit = 10
convert-durations = days

[printsims]
;   set static options for printsims jobs
ranking-stat = combined_far
rank-by = MIN
convert-durations = days
sort-by = injected_decisive_distance
sngl-table = sngl_inspiral
recovery-table = coinc_inspiral
simulation-table = sim_inspiral
param-name = combined_far
param-ranges = !0
;Which injection mapping to use; if using injfind:
map-label = 'sim_inspiral<-->coinc_event coincidences (nearby)'
; if using dbinjfind
;map-label= 'nearby_insp'

[printmissed]
;   set static options for printmissed jobs
recovery-table = coinc_inspiral
simulation-table = sim_inspiral
livetime-program = thinca
limit = 10
;Which injection mapping to use; if using injfind:
map-label = 'sim_inspiral<-->coinc_event coincidences (nearby)'
; if using dbinjfind
;map-label= 'nearby_insp'

[minifollowups]
;   set static options for minifollowup jobs

[plotfm]
; establish what plotfm jobs to do; the following options
; must have corresponding sections with options given
; each section name will be added to the plotfm user_tag
fm_dist_v_param = 
fm_lin_plots = 
fm_dist_v_end_time = 
fm_dist_v_dt = 

[fm_dist_v_param]
; plot injected decisive distance v. mass params
ranking-stat = 'combined_far:Combined FAR (yr$^{-1}$)'
variables = 'injected_mass1+injected_mass2:Total Mass ($M_\odot$); injected_decisive_distance:Injected Decisive Distance (Mpc)' --variables 'injected_mchirp:Chirp Mass ($M_\odot$); injected_decisive_distance:Injected Decisive Distance (Mpc)'
logz =
logy = 
colorbar = 
recovery-table = coinc_inspiral
rank-by = MIN
simulation-table = sim_inspiral
livetime-program = thinca
;Which injection mapping to use; if using injfind:
map-label = 'sim_inspiral<-->coinc_event coincidences (nearby)'
; if using dbinjfind
;map-label= 'nearby_insp'

[fm_lin_plots]
; plot linear fm plots
ranking-stat = 'combined_far:Combined FAR (yr$^{-1}$)'
variables = '(recovered_end_time+recovered_end_time_ns*1e-9)-(injected_gps_time+injected_gps_time_ns*1e-9): Recovered - Injected End Time (s); injected_mass1+injected_mass2: Injected Total Mass ($M_\odot$)' --variables '(recovered_end_time+recovered_end_time_ns*1e-9)-(injected_gps_time+injected_gps_time_ns*1e-9): Recovered - Injected End Time (s); sim_tag: Injection Type' --variables '(recovered_end_time+recovered_end_time_ns*1e-9)-(injected_gps_time+injected_gps_time_ns*1e-9): Recovered - Injected End Time (s); (recovered_mass-(injected_mass1+injected_mass2))/(injected_mass1+injected_mass2): Total Mass Frac. Difference ($\frac{mtotal_{rec}-mtotal_{inj}}{mtotal_{inj}}$)' --variables 'sim_tag: Injection Type; (recovered_mass-(injected_mass1+injected_mass2))/(injected_mass1+injected_mass2): Total Mass Frac. Difference ($\frac{mtotal_{rec}-mtotal_{inj}}{mtotal_{inj}}$)'
logz = 
rank-by = MIN
colorbar = 
recovery-table = coinc_inspiral
simulation-table = sim_inspiral
livetime-program = thinca
;Which injection mapping to use; if using injfind:
map-label = 'sim_inspiral<-->coinc_event coincidences (nearby)'
; if using dbinjfind
;map-label= 'nearby_insp'

[fm_dist_v_end_time]
; plot injected decisive distance v. end_time in days
ranking-stat = 'combined_far:Combined FAR (yr$^{-1}$)'
variables = 'injected_gps_time:gps_days; injected_decisive_distance:Injected Decisive Distance (Mpc)'
logz = 
rank-by = MIN
colorbar = 
recovery-table = coinc_inspiral
logy = 
simulation-table = sim_inspiral
livetime-program = thinca
;Which injection mapping to use; if using injfind:
map-label = 'sim_inspiral<-->coinc_event coincidences (nearby)'
; if using dbinjfind
;map-label= 'nearby_insp'

[fm_dist_v_dt]
; plot injected decisive distance v. difference in recovered/injected end-times
ranking-stat = 'combined_far:Combined FAR (yr$^{-1}$)'
variables = '(recovered_end_time+recovered_end_time_ns*1e-9)-(injected_gps_time+injected_gps_time_ns*1e-9): Recovered - Injected End Time (s); injected_decisive_distance:Injected Decisive Distance (Mpc)'
logz = 
rank-by = MIN
colorbar = 
recovery-table = coinc_inspiral
logy = 
simulation-table = sim_inspiral
livetime-program = thinca
;Which injection mapping to use; if using injfind:
map-label = 'sim_inspiral<-->coinc_event coincidences (nearby)'
; if using dbinjfind
;map-label= 'nearby_insp'

[plotslides]
;   set static options for plotslide jobs
coinc-table = coinc_inspiral

[plotcumhist]
;   set static options for plotcumhist jobs
num-bins = 20
coinc-table = coinc_inspiral
ranking-stat = snr
rank-by = MAX
square-stats = 
param-ranges = [0.0,0.2);[0.2,20.0)
param-name = minimum_duration

[plotifar]
;   set static options for plotifar jobs
coinc-table = coinc_inspiral
show-two-sigma-error = 
param-ranges = [0.0,0.2);[0.2,20.0)
show-max-bkg = 
plot-uncombined = 
plot-slides = 
show-min-bkg = 
group-by-ifos = 
plot-combined = 
param-name = minimum_duration

[mvsc_dag]
number-of-trees = 100
criterion-for-optimization = 6
leaf-size = 5
sampled-parameters = 12
;if s6c, set to H1,L1
all-instruments = H1,L1,V1

[mvsc_get_doubles]
number = 10
;apply-weights =
;check-weights =
exact-tag = exact_insp
;start-time = 0
;end-time  = 999999999

[mvsc_update_sql]
