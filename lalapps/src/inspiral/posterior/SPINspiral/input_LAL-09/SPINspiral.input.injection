  #SPINspiral:  MCMC-injection input file.  The LINE NUMBER for each parameter should not change!!!  For MCMC parameters, see SPINspiral.input.parameters
  
  #General:
  #Value:                                                 Variable:                Description:
  1                                                       injectSignal             Inject a signal into the data (1) or not (0).
  4                                                       injectionWaveform        Waveform version used for the software injection:  1 for 1.5PN 12-parameter Apostolatos, 2 for 12-parameter LAL, 3 for 15-parameter LAL, 4 for non-spinning LAL
  2.0                                                     injectionPNorder         Post-Newtonian order to use for the software injection, e.g. 1.5, 2.0, 3.5.  Will be rounded off to the nearest 0.5.
  0.0                                                     injectionSNR             If > 0: scale the distance such that the injection network SNR becomes injectionSNR
  12345                                                   injRanSeed               Random number seed for random injection parameters. Don't change between serial chains of the same run!
  
  
  #Parameters:                                                                                                           
  #Number:     ID:     InjectionValue:     ranInjPar:     Sigma:     BoundType:     BoundLow:           BoundUp:                        Description:
								                                               
  1            61      2.9943              0              0.1        1              1.000               12.000                          Mc             chirp mass (Mo)
  2            62      0.1077              0              0.1        1              0.03                0.25                            eta            symmetric mass ratio (-)
  3            11      894377000.00000     0              0.1        2              -0.05000            0.05000                         t_c            GPS time of coalescence (s)
  4            22      1.7628              0              0.1        1              -6.9                4.6                             log(d_L)       log of luminosity distance (Mpc)
  5            31      4.5500              0              0.1        1              0.0                 6.283185                        alpha          right ascension (rad)
  6            32      0.8800              0              0.1        1              -0.999999           0.999999                        sin(delta)     sin declination (-)
  7            51      0.605255            0              0.1        1              -0.999999           0.999999                        cos(i)         inclination (-)
  8            41      1.5000              0              0.1        1              0.0                 6.283185                        phi_c          binary phase at coalescence (rad)
  9            52      0.2000              0              0.1        1              0.0                 3.141593                        psi            polarisation angle (rad)


 ###################################################################################################################################################################################
 Explanation:
 
 Number: just to guide the eye in this file?
 ID: a unique number for a parameter
 InjectionValue: injectionvalue for the parameter, can be overwritten depending on ranInjPar
 RanInjPar:  randomise the injection value:
   0: no; inject InjectionValue
   1: yes; inject random value from a Gaussian distribution with centre InjectionValue and width Sigma (min BoundLow, max BoundUp)
   2: yes; inject random value from range determined by BoundLow-BoundUp (make sure your MCMC prior matches this!)
 sigma: width of the Gaussian distribution to draw from for RanInjPar=1
 
 BoundType: 
   1: general range, BoundLow-BoundUp
   2: general range, InjectionValue + BoundLow - InjectionValue + BoundUp;                 BoundLow must be <= 0, BoundUp must be >= 0  
   3: general range, InjectionValue * BoundLow - InjectionValue * BoundUp;                 BoundLow must be <= 1, BoundUp must be >= 1  
 BoundLow,Up: used to determine upper or lower bound for BoundType = 1,2
   
