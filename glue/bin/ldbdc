#!/usr/bin/python
#
# lightweight database dumper client
#
# $Id$
#
# Copyright (C) 2003 Duncan Brown
# 
# This file is part of the lightweight datapase dumper (ldbd)
#

import sys
import os
import getopt
import re
import exceptions

try:
  from glue import LDBDClient
  from glue import gsiserverutils
except ImportError, e:
  print >> sys.stderr, """
Error: unable to import modules from glue.

Check that glue is correctly installed and in your PYTHONPATH.

%s
""" % e
  sys.exit(1)


def usage():
  msg = """\
Usage: ldbdc.py [OPTIONS]

  -s, --server HOST:PORT  connect to ldbd on HOST:PORT (default port 49999)
  -j, --identity SUBJECT  the subject of the servers service certififcate
  -d, --database NAME     use database NAME
  -i, --insert LIGOLW     insert LIGO lightweight file LIGOLW
  -q, --query QUERY       execute SQL query QUERY
  -o, --output FILE       write output to FILE
  -p, --ping              ping the server
  -h, --help              print this message

The options --server and --database must be specified.
One of the options --query or --insert must be specified.
\
"""
  print msg

def help():
  usage()
  sys.exit(0)

shortop = "s:j:d:i:q:o:vph"
longop = [
  "server=",
  "identity=",
  "database=",
  "insert=",
  "query=",
  "output=",
  "ping",
  "help"
  ]

try:
  opts, args = getopt.getopt(sys.argv[1:], shortop, longop)
except getopt.GetoptError:
  usage()
  sys.exit(1)

# defaults
server = None
port = 30020
identity = None
database = None
infile = None
outfile = None
squery = None
ping = None

for o, a in opts:
  if o in ("-h", "--help"):
    help()
  elif o in ("-s", "--server"):
    a = a.split(':')
    server = a[0]
    try: port = a[1]
    except IndexError: pass
  elif o in ("-j", "--identity"):
    identity = a
  elif o in ("-i", "--insert"):
    infile = a
  elif o in ("-q", "--query"):
    squery = a
  elif o in ("-d", "--database"):
    database = a
  elif o in ("-o", "--output"):
    outfile = a
  elif o in ("-p", "--ping"):
    ping = 1

if not server or not database or (not infile and not squery and not ping):
  usage()
  sys.exit(1)
if (squery and infile):
  print "Only one of --query and --insert can be specified\n"
  usage()
  sys.exit(1)

if not identity:
  identity = "/DC=org/DC=doegrids/OU=Services/CN=ldbd/%s" % server

# open connection to LDBD Server
try:
  myClient = LDBDClient.LDBDClient(server, port, identity)

except Exception, e:
  print >>sys.stderr, \
    "Unable to connect to LDBD Server %s:%d" % (server, port)
  if gsiserverutils.checkCredentials():
    print >>sys.stderr, "Got the following error : " + str(e)
    print >>sys.stderr, "Enter 'LSCsegFind --help' for usage"
  sys.exit(1)

try:
  if ping:
    # ping the server and print the response
    print myClient.ping()

  elif infile:
    # open an input file and send it to the server
    fh = open(infile,'r')
    xmltext = fh.read()
    myClient.insert(xmltext)
    fh.close()

  elif squery:
    # execute the query and write out the results
    if outfile:
      fh = open(outfile,'w')
    else:
      fh = sys.__stdout__
    fh.write(myClient.query(squery))
    fh.close()

except Exception, e:
  print >>sys.stderr, "Error querying LDBD Server: %s" % str(e)
  print >>sys.stderr, "Enter 'ldbdc --help' for usage"
  sys.exit(1)

sys.exit(0)
