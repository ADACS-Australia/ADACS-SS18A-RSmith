#!/usr/bin/env python
import pylab as mp
import os,sys

# Justin Garofoli justing@physics.syr.edu
# 2009 October 12

"""
 todo:
 1) add logging
 2) put all output in a directory
 3) get flags that are on and their segments
      within the window, and draw those  (right now
      we don't know if a flag is on right after
      the central time.
"""


IFOs = ('H1', 'L1', 'V1')

def get_segments(gpstime):
  req = 'ligolw_dq_query -d --report -i ' + str(gpstime) 
  pp = os.popen(req)
  dd = {}
  for line in pp.readlines():
    print line[:-1]
    this_line = line[:-1]
    these_words = this_line.split()
    dd[these_words[0]] = (int(these_words[1][1:]), int(these_words[2]), int(these_words[3][:-1]))
  return dd

def get_segments_test(gpstime):
  pp = os.popen('cat test.txt')
  dd = {}
  for line in pp.readlines():
    this_line = line[:-1]
    these_words = this_line.split()
    dd[these_words[0]] = (int(these_words[1][1:]), int(these_words[2]), int(these_words[3][:-1]))
  return dd

def make_figure(dd,width):
  kk = dd.keys()
  kk.sort()
  for ifo in IFOs:
    mp.figure(figsize=(12,6),dpi=72)
    i = 0
    for k in kk:
      if ifo == k[0:2]:
        times = dd[k]
        y = i * mp.ones(times[2]-times[0])
        t = mp.linspace(times[0],times[2],times[2]-times[0]) - times[1]
        cc = 'r'
        if k.find('UP:') > -1 or k.find('LIGHT:') > -1 or k.find('SCIENCE:') > -1 or k.find('CALIBRATED:') > -1:
          cc = 'g'
        elif k.find('V1:') > -1:
          cc = 'm'
        mp.plot(t,y,label=k,c=cc,lw=2)
        ha = 'right'
        if (-1)**i==1:
          ha = 'left'
        print str(i) + ' ' + k + ' ' + str(t.shape[0]) + ' ' + ha
        mp.text((-1)**i*50,i,k,bbox=dict(facecolor='white', alpha=0.8, edgecolor='white'), horizontalalignment=ha, verticalalignment='center',fontsize=10)
        i = i+1
    mp.plot((0,0),(-1,i),c='k',lw=1)
    mp.xlim(-1*width,width)
    mp.title(ifo + ' data quality flags at t0 = ' + str(times[1]))
    mp.ylim(-1,i)
    mp.yticks(mp.arange(-1,i),''*(i+1))
    mp.xlabel('time after t0 (seconds)')
    mp.savefig(ifo + '-' + str(times[1]) + '_flags.png')
    mp.close('all')
  return 1

if __name__ == '__main__':
  if len(sys.argv)==1:
    print 'error, must give gpstime argument'
    sys.exit()
  elif len(sys.argv)==2:
    gpstime = sys.argv[1]
    width=600
  elif len(sys.argv)==3:
    gpstime = sys.argv[1]
    width   = float(sys.argv[2])
  else :
    print 'wrong arguments'
    sys.exit()

  #print sys.argv[1]
  #print sys.argv
  dd = get_segments(gpstime)
  #dd = get_segments_test(931540290)
  make_figure(dd,width)
