#!/usr/bin/python

"""
LSCfileAdd
 a tool to add files into an LDR instance.

 Written by Ben Johnson
 and is based on python (un)publishing routines by Hari Pulapaka,
 as well as the LSCdataFind code. 
 
 This file last edited on Thu Oct 07 15:43:27 PDT 2004 @988 /Internet Time/

 TODO: Must define exceptions better, and of course, get it to work at all...
 
"""

__author__="Ben Johnson: publishes file lfn<->pfn mappings and associated metadata into a database"
__date__='$Date$'
__version__='$Revision$'[0:0]

import exceptions
import sys

#try:
#        from pyGlobus import security
#except ImportError:
#        print >>sys.stderr, "\nCould not import a module from the pyGlobus library."
#        print >>sys.stderr, "\nPlease run your LSC Data Grid setup script:"
#        print >>sys.stderr, "   e.g.  prompt> . ~/ldg-3.0/setup.sh  # for the bash shell"
#        print >>sys.stderr, "         prompt> source ~/ldg-3.0/setup.csh # for (t)csh"
#        print >>sys.stderr, "\n or point your PYTHONPATH environment variable to the location of the pyGlobus modules."
#        sys.exit(1)
        
try:
        from glue.LSCfileAdd import *
except ImportError, e:
        print >>sys.stderr, e
        print >>sys.stderr, "\nPython LSCfileAdd.py library is not found; please add its location to the PYTHONPATH environmental variable."
        print >>sys.stderr, "\nFor example, from the bash or (t)csh shell respectively, run:\n"
        print >>sys.stderr, "   export PYTHONPATH=$PYTHONPATH:$LSCSOFT/src/glue/lib"
        print >>sys.stderr, "or"
        print >>sys.stderr, "   setenv PYTHONPATH ${PYTHONPATH}:$LSCSOFT/src/glue/lib"
        print >>sys.stderr, "\nwhere $LSCSOFT is the directory containing the lscsoft cvs repository."
        sys.exit(1)

def print_stats(successes,failures):
        """
        Prints what was done by the LSCfileAdd. i.e. the names of each file
        And the effective metadata that was added to the database etc.
        """
        print "Publishing finished"
        print "Successfully published filenames:"
        for item in successes:
                print "\t%s" % (item,)
        print "Filenames which failed to be published (plus reason):"
        for item in failures:
                print "\t%s\n\t\t%s" % (item[0],item[1])
        print "Total files successfully published: %s" % (len(successes),)
        print "Total files which were not published: %s" % (len(failures),)
                
        
## END print_stats()


##### Begin Main #####
if __name__ == '__main__':
        # Init class instances
        files = LSCFile()
        userparams = CLIUtil()
        grid = GridUtil()
        
        # Process command line
        #try:
        userparams.get_user_parameters()
        #except:
        #        print >>sys.stderr, "Error in get_user_parameters()"
        #        sys.exit(1)
        
        # Make sure the user grid credentials are ok.
        #try:
        #        grid.checkCredentials()
        #except:
        #        print >>sys.stderr, "Grid credentials error"
        #        sys.exit(2)
        
        #Publish the files with the metadata requested
        try:
                files.publish(userparams.attr, userparams.filelist,\
                              userparams.urlType,userparams.host,userparams.port)
        except LSCfileAddException, e:
                print >>sys.stderr, "Error while publishing: %s" % e
                sys.exit(3)
        
        # Print what was done to stdout and exit
	if userparams.nonmetaparam.has_key('verbose'):
		print_stats(files.successes,files.failures)
        sys.exit(0)

##### END Main #####
