#!/usr/bin/python
#
# lightweight database dumper dmt segment client
#
# $Id$
#
# Copyright (C) 2005 Duncan Brown
# 
# This file is part of the lightweight datapase dumper (ldbd)
#

import sys
import os
import getopt
import re
import exceptions
import re

try:
  from glue import LDBDClient
  from glue import gsiserverutils
except ImportError, e:
  print >> sys.stderr, """
Error: unable to import modules from glue.

Check that glue is correctly installed and in your PYTHONPATH.

%s
""" % e
  sys.exit(1)


def usage():
  msg = """\
Usage: dmtdq_seg_insert [OPTIONS]

  -r, --server HOST:PORT  connect to ldbd on HOST:PORT (default port 30020)
  -f, --file              file to insert (deleted upon success)
  -p, --ping              ping the server
  -h, --help              print this message

\
"""
  print msg

def help():
  usage()
  sys.exit(0)

shortop = "r:f:ph"
longop = [
  "server=",
  "file=",
  "ping",
  "help"
  ]

try:
  opts, args = getopt.getopt(sys.argv[1:], shortop, longop)
except getopt.GetoptError:
  usage()
  sys.exit(1)

# defaults
hostPortString = None
port = 30020
infile = None
ping = None

# environment variables override defaults but not
# command line options
try:
  hostPortString = os.environ['LDBD_SERVER']
except:
  pass

for o, a in opts:
  if o in ("-h", "--help"):
    help()
  elif o in ("-r", "--server"):
    hostPortString = a
  elif o in ("-i", "--file"):
    infile = a
  elif o in ("-p", "--ping"):
    ping = 1

# determine server and port
if not hostPortString:
  print >>sys.stderr, "No server specified"
  print >>sys.stderr, "Enter 'dmtdq_seg_insert --help' for usage"
  sys.exit(1)

if hostPortString.find(':') < 0:
  # no port specified
  host = hostPortString
else:
  # server and port specified
  host, portString = hostPortString.split(':')
  port = int(portString)

if not ping and not infile:
  print "\nNo file specified\n"
  usage()
  sys.exit(1)

# open connection to LDBD Server
identity = "/DC=org/DC=doegrids/OU=Services/CN=ldbd/%s" % host
try:
  myClient = LDBDClient.LDBDClient(host, port, identity)

except Exception, e:
  print >>sys.stderr, \
    "Unable to connect to LDBD Server %s:%d" % (host, port)
  if gsiserverutils.checkCredentials():
    print >>sys.stderr, "Got the following error : " + str(e)
    print >>sys.stderr, "Enter 'LSCsegFind --help' for usage"
  sys.exit(1)

try:
  if ping:
    # ping the server and print the response
    print myClient.ping()

  else:
    # open the input file and send it to the server
    fh = open(infile,'r')
    xmltext = fh.read()
    myClient.insertdmt(xmltext)
    fh.close()

except Exception, e:
  print >>sys.stderr, "Error inserting segments: %s" % str(e)
  sys.exit(1)

if infile:
  os.unlink(infile)

sys.exit(0)
