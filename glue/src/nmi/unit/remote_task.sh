#!/bin/sh

# this script expects:
#
# lalapps installed in ./head/opt/lscsoft/lalapps
#
# $NMI_ligo_reference_xml defined (by Metronome, from our submit file)
# $NMI_component_version (git id) defined (by Metronome, from our submit file)
# $NMI_ligo_add_params defined (by Metronome, from our submit file)

# wrap this whole script in a block combining stdout & stderr
{

# exit immediately if any command exits with a non-zero status.
set -e
# treat unset variables as an error when performing parameter expansion.
set -u
# print (unexpanded) shell input lines as they are read
set -v
# print (expanded) commands before they're executed
set -x

BASE_DIR=$(pwd)

# in the provided lalsuite install dir, rebase any now-incorrect
# static paths that were set at build time in *-user-env.sh, etc.
find $BASE_DIR/head \( -name \*-user-env.sh -or -name lscsoftrc \) -print0 | \
    xargs -0 \
    perl -p -i.orig -e 's!/.*/execute/dir_\d+/userdir/!'${BASE_DIR}'/!g'

# although lalapps may be statically compiled, AFAICT many tools in
# lal, glue, etc. cannot be, and thus have runtime dependencies
# requiring env setup (boo)
set +u
source $BASE_DIR/head/etc/lscsoftrc
set -u

# useful info to have logged for later debugging
$BASE_DIR/head/opt/lscsoft/lal/bin/lal-version

# create and work in a subdir named after the git id we're testing so
# that later diff tests can keep straight which results which
mkdir $NMI_component_version
cd $NMI_component_version

# create cwd symlinks to all our input files (as expected by lalapps);
# we assume they're in the same dir as the provided XML reference file
datadir=$(dirname $NMI_ligo_reference_xml)
ln -sv $datadir/cache
# *.tmp are generated by pre-execute.sh
for filename in $(< $BASE_DIR/input_files.tmp) $(< $BASE_DIR/symlinks.tmp); do
    ln -sv $datadir/$filename
done

# do the deed
time $BASE_DIR/head/opt/lscsoft/lalapps/bin/$NMI_ligo_exe $(< $BASE_DIR/params.tmp) $NMI_ligo_add_params $(< $BASE_DIR/input_files.tmp)

# end of stdout/stderr-combining block
} 2>&1
