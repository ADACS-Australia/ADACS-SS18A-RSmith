********************************************************************/
*                                                                  */
*    IBM DB2 Information Integrator Replication Edition            */
*    Version 8.2 for Linux, UNIX AND Windows                       */
*                                                                  */
*    Sample MQSeries queue definitions for Q Replication.          */
*    Licensed Materials - Property of IBM                          */
*                                                                  */
*    (C) Copyright IBM Corp. 1993, 2004. All Rights Reserved       */
*                                                                  */
*    US Government Users Restricted Rights - Use, duplication      */
*    or disclosure restricted by GSA ADP Schedule Contract         */
*    with IBM Corp.                                                */
*                                                                  */
********************************************************************/

********************************************************************/
* This script uses MQSC commands to set up the required            */
* WebSphere MQ objects for peer-to-peer Q replication between      */
* three remote servers.                                            */
* Run this script at Server 3, using the  following command from   */
* the directory where the file is saved:                           */
*                                                                  */
* Linux, UNIX:  runmqsc <qmgr_name> < filepath/script_filename     */
* Windows:      runmqsc <qmgr_name> < filepath\script_filename     */ 
*                                                                  */
* IMPORTANT NOTE: In the first two DEFINE CHL commands, you must   */
* replace the text "IP address of Server 1(port)" and "IP address  */
* of Server 2(port)" with the IP addresses of Server 1 and         */
* Server 2, and a port number.                                     */
*                                                                  */
* For more information on using MQSC commands or the MQ Explorer   */
* GUI, see the WebSphere MQ System Administration Guide for your   */
* operating system, or the WebSphere MQ Script (MQSC) Command      */
* Reference.                                                       */
********************************************************************/

********************************************************************/
* This script creates the following objects within                 */
* queue manager QM3 at Server 3:                                   */   
* (NOTE: "ASN" is the default Q Capture and Q Apply schema.        */
* Change this as needed.)                                          */
* - A remote queue definition for Q Capture to put data messages   */
* for Server 1 (a "send queue"), ASN.QM3_TO_QM1.DATAQ              */
* - A remote queue definition for Q Capture to put data messages   */
* for Server 2, ASN.QM3_TO_QM2.DATAQ                               */
* - A local administration queue, ASN.QM3.ADMINQ                   */
* - A local restart queue, ASN.QM3.RESTARTQ                        */
* - A local transmission queue (xmitq) for messages going to       */
* Server 1, QM1                                                    */
* - A local transmission queue (xmitq) for messages going to       */
* Server 2, QM2                                                    */
* - A local queue for Q Apply to get data messages from the        */
* Q Capture program on Server 1 (a "receive queue"),               */
* ASN.QM1_TO_QM3.DATAQ                                             */
* - A local queue for Q Apply to get data messages from the        */
* Q Capture program on Server 2, ASN.QM2_TO_QM3.DATAQ              */
* - A remote queue definition that points to the administration    */
* queue at Server 1, ASN.QM1.ADMINQ                                */
* - A remote queue definition that points to the administration    */
* queue at Server 2, ASN.QM2.ADMINQ                                */
* - A model queue definition for spill queues that hold data       */
* messages from Q Capture during the load, IBMQREP.SPILL.MODELQ    */
* - A sender channel from QM3 to queue manager QM1 using           */ 
* xmitq QM1, QM3_TO_QM1                                            */
* - A sender channel from QM3 to queue manager QM2 using           */ 
* xmitq QM2, QM3_TO_QM2                                            */ 
* - A receiver channel from QM1, QM1_TO_QM3                        */
* - A receiver channel from QM2, QM2_TO_QM3                        */
********************************************************************/

DEFINE QREMOTE('ASN.QM3_TO_QM1.DATAQ') RNAME('ASN.QM3_TO_QM1.DATAQ') +
 RQMNAME('QM1') XMITQ('QM1')

DEFINE QREMOTE('ASN.QM3_TO_QM2.DATAQ') RNAME('ASN.QM3_TO_QM2.DATAQ') +
 RQMNAME('QM2') XMITQ('QM2')

DEFINE QLOCAL('ASN.QM3.ADMINQ')

DEFINE QLOCAL('ASN.QM3.RESTARTQ') 

DEFINE QLOCAL('QM1') USAGE(XMITQ)

DEFINE QLOCAL('QM2') USAGE(XMITQ)

DEFINE QLOCAL('ASN.QM1_TO_QM3.DATAQ')

DEFINE QLOCAL('ASN.QM2_TO_QM3.DATAQ')

DEFINE QREMOTE('ASN.QM1.ADMINQ') RNAME('ASN.QM1.ADMINQ') +
 RQMNAME('QM1') XMITQ('QM1')

DEFINE QREMOTE('ASN.QM2.ADMINQ') RNAME('ASN.QM2.ADMINQ') +
 RQMNAME('QM2') XMITQ('QM2')

DEFINE QMODEL('IBMQREP.SPILL.MODELQ') DEFSOPT(SHARED) +
 MAXDEPTH(500000) MSGDLVSQ(FIFO) DEFTYPE(PERMDYN)

DEFINE CHL ('QM3_TO_QM1') +
 CHLTYPE(SDR) TRPTYPE(TCP) +
 CONNAME('198.129.208.245') +
 XMITQ('QM1') +
 DISCINT (0) +
 SSLCIPH(RC4_MD5_US)

DEFINE CHL ('QM3_TO_QM2') +
 CHLTYPE(SDR) TRPTYPE(TCP) +
 CONNAME('130.39.245.245') +
 XMITQ('QM2') +
 DISCINT (0) +
 SSLCIPH(RC4_MD5_US)

DEFINE CHL ('QM1_TO_QM3') +
 CHLTYPE(RCVR) TRPTYPE(TCP) +
 SSLCIPH(RC4_MD5_US) +
 SSLCAUTH(REQUIRED) +
 SSLPEER('OU=Services, CN="ldbd/ldas-cit.ligo.caltech.edu"')

DEFINE CHL ('QM2_TO_QM3') +
 CHLTYPE(RCVR) TRPTYPE(TCP) +
 SSLCIPH(RC4_MD5_US) +
 SSLCAUTH(REQUIRED) +
 SSLPEER('OU=Services, CN="ldbd/ldas.ligo-la.caltech.edu"')

REFRESH SECURITY

********************************************************************/
* Defining objects for Q replication                               */
* After you create the queue manager, queues, and channels, use    */
* the Replication Center or ASNCLP command-line program            */
* to define the objects for Q replication:                         */
* In the Replication Center:                                       */
* - Use the Create Control Tables wizard to enter the name of      */
* the objects for the Q Capture control tables: queue manager      */
* (QM3), administration queue (ASN.QM3.ADMINQ), and restart        */
* queue (ASN.QM3.RESTARTQ).                                        */
* - Use the Create Control Tables wizard to enter the name of the  */
* objects for the Q Apply control tables: queue manager (QM3).     */
* - For the replication queue map that links Server 3 to Server 1, */
* use the Create Replication Queue Map window to enter the name    */
* of the send queue (ASN.QM3_TO_QM1.DATAQ), receive queue          */
* (ASN.QM3_TO_QM1.DATAQ), and remote queue definition at Server 1  */
* that points to the administration queue at Server 3              */
* (ASN.QM3.ADMINQ).                                                */
* - For the replication queue map that links Server 3 to Server 2, */
* use the Create Replication Queue Map window to enter the name    */
* of the send queue (ASN.QM3_TO_QM2.DATAQ), receive queue          */
* (ASN.QM3_TO_QM2.DATAQ), and remote queue definition at Server 2  */
* that points to the administration queue at Server 3              */
* (ASN.QM3.ADMINQ).                                                */
* - You can also use the ASNCLP: Use the SET QMANAGER command,     */
* CREATE CONTROL TABLES FOR command, and CREATE REPLQMAP command   */
* to define the objects for Q replication.                         */
********************************************************************/

*********************************************************************/
* Starting channels                                                 */
* For the remote setup, before you start replication you need to    */
* start WebSphere MQ interchannel communication.                    */
* First make sure that the queue manager is running, then start the */
* listener and then start the channel:                              */
* strmqm QM3  <<this command starts the qmgr>>                      */
* start runmqlsr -t tcp -m QM3 -p 1414 <<this starts the listener   */
* using tcpip protocol for queue manager QM3, port 1414>>           */
* runmqsc <<starts interactive MQSC command line >>                 */
* start channel (QM3_TO_QM1) <<this command starts the channel>>    */
* start channel (QM3_TO_QM2) <<this command starts the channel>>    */
* end  <<this command ends the runmqsc session>                     */
* Note: You need to use the same commands at Server 1 and Server 2. */
*********************************************************************/

*********************************************************************/
* Here is a quick sample to verify the WebSphere MQ setup by        */
* sending messages.                                                 */
* Go to the samples directory where WebSphere MQ is installed (on   */
* an AIX machine the default is /usr/mqm/samp/bin).                 */
* On Server 3, issue the following command:                         */
* amqsput ASN.QM3_TO_QM1.DATAQ QM3  <<put message on the queue>>    */
* <type some message>                                               */
* <hit return twice>                                                */  
* If no error is returned, the put was succesful.                   */
* Now go to Server 1 to get the message. Make sure you are          */
* in the right directory, and issue following command:              */
* amqsget ASN.QM3_TO_QM1.DATAQ QM1 <<get from queue at qmgr>>       */   
* You should be able to retrieve the message.                       */ 
* Repeat the same steps between Server 3 and Server 2, and between  */
* Server 1 and Server 2.                                            */
*********************************************************************/                              

