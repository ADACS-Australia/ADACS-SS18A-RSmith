[general]
gdb_url = https://simdb.phys.uwm.edu/api/
ifo = L1
; space separated list of classifiers
classifiers = ovl
;classifiers = ovl mvsc

usertag = test
; path to idq realtime directory with results of evaluation
idqdir = /home/reed.essick/test/dev-branch/frames/realtime/
; path to idq_realtime log file
realtime_log = /home/reed.essick/test/dev-branch/frames/realtime.log

; main idq_gdb directory where all event handling tasks will be running
main_gdb_dir = /home/reed.essick/test/dev-branch/frames/gracedb/gdb-output/

[executables]
idq_gdb_timeseries = laldetchar-idq-gdb-timeseries
idq_gdb_glitch_tables = laldetchar-idq-gdb-glitch-tables

[ldg_certificate]
robot_certificate = /home/idq/robot_cert/idq_ldas-pcdev2.ligo-la.caltech.edu-cert.pem
robot_key = /home/idq/robot_cert/robot.key.pem

[lvalert_listener]
server = lvalert.phys.uwm.edu
username = idq
password = eyedeeque
resource_name = idq-LLO-simdb
lvalert_config = /home/reed.essick/test/dev-branch/frames/gracedb/idq_lvalert_config.ini
executable = /home/reed.essick/test/dev-branch/frames/gracedb/run_idq_gdb_alert_handler.sh

[gdb-time-series]
; provide options that do not vary from event to event here
verbose = 

[gdb-glitch-tables]
; provide options that do not vary from event to event here
verbose = 

[nodes]
idq-la-gdb-testing =

;==========================================================
;node specific instructions
;==========================================================
[default_event]
; define time window in seconds before/after the candidate event for plotting
plotting_time_before = 10
plotting_time_after = 10
; define time window in seconds before/after the candidate event
time_before = 5
time_after = 5
; the maximum amount of time we'll wait between idq logger print statements
max_wait = 128
delay = 64

[idq-la-gdb-testing]
plotting_time_before = 10
plotting_time_after = 10
time_before = 5
time_after = 5
max_wait = 128
delay = 64

