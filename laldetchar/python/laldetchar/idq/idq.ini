####################################################################################################
#                                     EXAMPLE CONFIG FILE
####################################################################################################

##################################################
### section contains basic information about the run
##################################################
[general]

; the site at which we're running
ifo = L1

; tag that will be added to files produced as part of this run
usertag = 

; working directory for this run
idqdir = /home/reed.essick/test/dev-branch/now/
; the directory into which realtime results are written
realtimedir = %(idqdir)s/realtime
; the directory into which calibration files are written, including caches
calibrationdir = %(idqdir)s/calibration
; the directory into which training files are written, including caches
traindir    = %(idqdir)s/train
; the directory into which single channel summary files are written (for ovl training)
snglchndir  = %(idqdir)s/sngl_chn
; the directory into which summary files are written
summarydir  = /home/reed.essick/public_html/dev-branch/now/summary

; full path to the file containing list of auxiliary channels which will be used
selected-channels= %(idqdir)s/channels.txt
; full path to the file containing list of unsafe auxiliary  channels
unsafe-channels = %(idqdir)s/unsafe_channels.txt

; the channel used as the "target." Should be a proxy for glitches in the gravitational-wave channel
gwchannel = L1_OAF-CAL_DARM_DQ_32_2048
; a threshold on KW significance used to define what is a "glitch" and what isn't
gw_kwsignif_thr = 35

; list of classifiers to be used. Each classifier must have a corresponding section with the same name
;classifiers = ovl ovl-vsig ovl-useP mvsc svm ann
classifiers = ovl ovl-vsig ovl-useP mvsc
;classifiers = ovl ovl-vsig ovl-useP 

; list of combiners to be used. Each combiner must have a corresponding section with the same name
combiners = B
;combiners = A B C

; accounting_group tags
accounting_group = ligo.prod.o1.detchar.onlinedq.idq
accounting_group_user = reed.essick


##################################################
# section points to LDG certificates and authetification proceedures
##################################################
[ldg_certificate]
robot_certificate = /home/idq/robot_cert/idq_ldas-pcdev2.ligo-la.caltech.edu-cert.pem
robot_key = /home/idq/robot_cert/robot.key.pem

##################################################
# section describes how to find ETG output as input to realtime an training jobs
##################################################
[data_discovery]
; directory in which GW channel triggers live
GWgdsdir = /gds-l1/dmt/triggers

; KW config for process producing GW triggers
GWkwconfig = /gds-l1/dmt/triggers/config/L-ER6_KW_AUX.cfg.20150311

; directory in which AUX channel triggers live
AUXgdsdir = /gds-l1/dmt/triggers

; KW config for process producing AUX triggers
AUXkwconfig = /gds-l1/dmt/triggers/config/L-ER6_KW_AUX.cfg.20150311
 
##################################################
# section enumerating how to get science segments
##################################################
[get_science_segments]
; location of local segments on disk (realtime)
xmlurl = /gds-l1/dmt/triggers/DQ_Segments

; name of segment flag
include = L1:ODC-MASTER_GRD_IFO_LOCKED:1
; the executable used to query the segment database (train, calibration, summary)
program = ligolw_segment_query_dqsegdb
; the server hosting segment database
segdb = https://dqsegdb5.phy.syr.edu

##################################################
# section specifies actions to be taken if the pipeline detects an anamoly
##################################################
[warnings]
; email list for warnings in calibration job
calibration = reed.essick@ligo.org
; threshold for erros to generate a warning in calibration job
calibration_errorthr = 0.1

;email list for warnings in summary job
summary = reed.essick@ligo.org
;threshold for errors to generate a warning in summary job
summary_errorthr = 0.1

####################################################################################################
#
# FORMAT THESE THREE BETTER! -> WILL DEPEND ON HOW THEY ARE USED/CALLED IN TRAINING JOB

##################################################
# instructions on how to build auxmvc vectors for MLA algorithms
##################################################
;[build_auxmvc_vectors]
; the executable to run
;executable = laldetchar-idq-build-auxmvc-vectors

; parameters fed into that executable
;time-window = 0.1
;signif-threshold = 35.0
;clean-samples-rate = 0.1

;max-clean-samples = 5000
;max-glitch-samples = 5000

;filter-out-unclean =
;verbose =

[prepare_training_auxmvc_samples]
;executable = laldetchar-idq-prepare-training-auxmvc-samples
; need condor section for this because of how it is called under auxmvc.py

[add_file_to_cache]
;executable = /home/reed.essick/dev/opt/lscsoft/lalsuite/bin/laldetchar-idq-append-file-to-cache
; need condor section for this because of how it is called under auxmvc.py

[condor]
; this section is a place holder and we DEFINITELY want to clean this up.
; However, it isn't immediately clear how to do so without changing auxmvc.py
; perhaps two more miniconfigs?
universe = vanilla
;idq_build_auxmvc_vectors = laldetchar-idq-build-auxmvc-vectors
;add_file_to_cache = /home/reed.essick/dev/opt/lscsoft/lalsuite/bin/laldetchar-idq-append-file-to-cache
idq_prepare_training_auxmvc_samples = laldetchar-idq-prepare-training-auxmvc-samples

#
#
####################################################################################################

### this calls a function that is known to be broken, and is not important to the pipeline as a whole
### it is certainly deprecated, and should probably be removed
[convertkwtosb]
executable = laldetchar-idq-convertkwtosb

##################################################
# scheduling/instructions for realtime job
##################################################
[realtime]
clean_rate = 1.0

; do these belong here, or somewhere else? 
clean_window = 0.1
clean_threshold = 25. 

delay = 10
padding = 0.1

dat_columns = GPS i unclean signif SNR

;sampling frequency for rank,fap timeseries in Hz
sampling_rate = 256

##################################################
# scheduling/instructions for training job
##################################################
[train]
executable = laldetchar-idq-train

stride = 1800
delay = 0
lookback = 604800
initial-lookback = 3600

;directory for  condor log files (better if it is local and unique so that different runs would not clash) 
condorlogs = /usr1/reed.essick/condorlogs/er6-1102346009_1102387870

max-clean-samples = 5000
max-glitch-samples = 5000

##################################################
# scheduling/instructions for calibration job
##################################################
[calibration]
executable = laldetchar-idq-calibration

mode = dat
;mode = npy

stride = 64
delay = 0
lookback = 43200
initial-lookback = 3600

urank_nsamples = 501

cluster_key = signif
cluster_win = 0.1

FAP = 0.001 0.003 0.01 0.03 0.05 0.10 0.30 0.50 0.90

min_num_gch = 10
min_num_cln = 10

max_num_gch = 5000
max_num_cln = 5000
kde_num_samples = 101

##################################################
# scheduling/instructions for summary job
##################################################
[summary]
executable = laldetchar-idq-summary 

stride = 300
delay = 0
lookback = 86400
trending = 600 1800 3600 7200 
;trending = 43200 86400 604800 

cluster_key = signif
cluster_win = 0.1

FAP = 0.01 0.05 0.10 0.30 0.50 0.90 1.00

;gw_thr = 35
;switch_snr_signif =

kde_num_samples = 101

####################################################################################################
#                                  CLASSIFIER SPECIFIC SECTIONS
####################################################################################################

##################################################
# OVL
##################################################

### metric : eff/dt
[ovl]
; the type of classifier. Used to route data to the correct training/evaluation code
flavor = ovl
; the section name for all condor functionality
condor = ovl-condor

; flavor=ovl specific options
metric = eff/dt
num_runs   = 9
incremental = 1000
ifos       = L1
gwsets     = kwl1
safety     = None
windows    = 0.025 0.050 0.100
thresholds = 15 25 30 50 100 200 400 800 1600
Psigthr    = 1e-5
effbydtthr = 3.0

; minimum and maximum number of glitches for training
; for ovl, min_num_cln is not used (but it would correspond to a livetime in seconds)
min_num_gch = 10
min_num_cln = 0

### metric : vsig
[ovl-vsig]
flavor = ovl
condor = ovl-condor

metric = vsig
num_runs   = 9
incremental = 1000
ifos       = L1
gwsets     = kwl1
safety     = None
windows    = 0.025 0.050 0.100
thresholds = 15 25 30 50 100 200 400 800 1600
Psigthr    = 1e-5
effbydtthr = 3.0

; minimum number of glitches for training
min_num_gch = 10
min_num_cln = 0

### metric : useP
[ovl-useP]
flavor = ovl
condor = ovl-condor

metric = useP
num_runs   = 9
incremental = 1000
ifos       = L1
gwsets     = kwl1
safety     = None
windows    = 0.025 0.050 0.100
thresholds = 15 25 30 50 100 200 400 800 1600
Psigthr    = 1e-5
effbydtthr = 3.0

; minimum number of glitches for training
min_num_gch = 10
min_num_cln = 0

### condor section for ovl classifiers
[ovl-condor]
; location of executables
universe = vanilla

##################################################
# Random Forests
##################################################
[mvsc]
flavor = forest
condor = forest-condor

; options for mvsc evaluate job
A = 

;options for forest training job
v = 0
a = 1
n = 100
l = 8
s = 64
c = 5
g = 1
i = 
d = 1
z = GPS_s,GPS_ms,signif,SNR,unclean

;forest_add_excluded_vars=true

; minimum number of glitches for training
min_num_gch = 10
min_num_cln = 10

### condor section for Random Forests
[forest-condor]
; location of executables
universe = vanilla

SprOutputWriterApp = /usr/bin/SprOutputWriterApp
SprBaggerDecisionTreeApp = /usr/bin/SprBaggerDecisionTreeApp

add_file_to_cache = /home/reed.essick/dev/opt/lscsoft/lalsuite/bin/laldetchar-idq-append-file-to-cache
forest_add_excluded_vars = /home/reed.essick/dev/opt/lscsoft/lalsuite/bin/laldetchar-idq-add-excluded-vars

##################################################
# Support Vector Machines
##################################################
[svm]
flavor = svm
condor = svm-condor

scale   = /home/yingsheng.ji/tools/libsvm-fr-idq/svm-scale  
predict = /home/yingsheng.ji/tools/libsvm-fr-idq/svm-predict
train   = /home/yingsheng.ji/tools/libsvm-fr-idq/svm-train
rank = fv
;rank = prob

;svm_train_cmd = /home/xiaoge.wang/libsvm/svm-train
;svm_model_dir = /home/yingsheng.ji/development/svm_test/model_set
;svm_train_post_script = /home/xiaoge.wang/libsivm/idq_post_svm_train.sh

gamma = 0.0078125
cost = 1024.0

; minimum number of glitches for training
min_num_gch = 10
min_num_cln = 10

### condor section for SVM
[svm-condor]
; location of executables
universe = vanilla

svm_evaluate_cmd = /home/reed.essick/dev/opt/lscsoft/lalsuite/bin/laldetchar-idq-svm-evaluate
svm_train_cmd = /home/reed.essick/dev/opt/lscsoft/lalsuite/bin/laldetchar-idq-svm-train

add_file_to_cache = /home/reed.essick/dev/opt/lscsoft/lalsuite/bin/laldetchar-idq-append-file-to-cache


##################################################
# ANN 
##################################################
[ann]
flavor = ann
condor = ann-condor

; options for ann convert job
normalization-attributes = signif,dt,freq,dur,npts
transform-dt-function = log
;attributes-max =
;attributes-min =

; options for ann evaluate job

;options for ann training job
training-machine = fann 
hidden-neurons = 25
connection-rate = 0.1
steep-out = 0.9
max-epochs = 4000
weights-min = -0.1
weights-max = 0.1
increase-factor = 1.001
desired-error = 0.0001

; minimum number of glitches for training
min_num_gch = 10
min_num_cln = 10

max_num_gch = 5000
max_num_cln = 5000

### condor section for ANN
[ann-condor]
; location of executables
universe = vanilla
add_file_to_cache = /home/youngmin/opt/lscsoft/master_20150525/bin/laldetchar-idq-append-file-to-cache

TrainNeuralNet = /home/youngmin/opt/lscsoft/master_20150525/bin/laldetchar-idq-ann-train
EvaluateNeuralNet = /home/youngmin/opt/lscsoft/master_20150525/bin/laldetchar-idq-ann-evaluate
ConvertANNData = /home/youngmin/opt/lscsoft/master_20150525/bin/laldetchar-idq-ann-convert

####################################################################################################
#                                COMBINERS SPECIFIC SECTIONS
####################################################################################################
[A]
joint_p(g) = max_pdf
joint_p(c) = prod_pdf

classifiers = ovl ovl-vsig ovl-useP

[B]
joint_p(g) = max_cdf
joint_p(c) = prod_cdf

classifiers = ovl ovl-vsig ovl-useP

[C]
joint_p(g) = prod_pdf
joint_p(c) = prod_pdf

classifiers = ovl ovl-vsig ovl-useP
