INSTALLATION INSTRUCTIONS

This file describes how to perform a basic install of LAL.

1. PRE-INSTALLATION

Certain software needs to be pre-installed on your system.  For several
systems it is possible to download and install pre-compiled binaries.
If you need to compile the software and install it in your home
directory, that is possible too.  For instructions, please see:

        http://www.lsc-group.phys.uwm.edu/daswg/download/repositories.html

to download binaries for supported systems or

        http://www.lsc-group.phys.uwm.edu/daswg/docs/howto/lscsoft-install.html

to build the software yourself.


2. INSTALLING LAL

2.1 BASIC BUILD OF LAL

For instructions, please see:

        http://www.lsc-group.phys.uwm.edu/daswg/docs/howto/lal-install.html

2.2 MORE DETAILS

Other useful make targets are:

        make dvi                # make documentation
        make check              # run the basic test suite
        make uninstall          # uninstall the library and header files
        make clean              # clean up compiled code (as before "make")
        make distclean          # clean up distribution (as before "configure")
        make vcs-clean          # clean up to VCS files (as before "00boot")

see the file INSTALL for additional details on configuring LAL.


3. SYSTEM-SPECIFIC INSTALLATION INSTRUCTIONS

SGI running IRIX 6.5 with gcc:

  * Configure with the option --with-cc="gcc -n32".

  * If you put shared objects (e.g., of the frame library) in non-standard
    places and are hoping to use LD_LIBRARY_PATH to locate them, you may need
    to set the environment variable LD_LIBRARYN32_PATH too.

  * If you have command-lines that are too long, you'll need to change
    the length of the lines allowed.  To do this use systune -i
    (or perhaps systune -r):

        $ systune -r
        systune-> ncargs 204800
        systune-> quit

    This increases the command line length maximum until reboot.
    Change it permanently with systune -b.

Alpha running Linux with ccc --- making shared libraries:

  * Problem: libtool doesn't know that ccc makes position-independent code
    by default (I hope ccc makes PIC by default...).

  * Solution: trick the configure script into thinking that you are using
    OSF/1 by using the --host option:

      ./configure --host=alpha-dec-osf3 --enable-shared

  * Note: use the same trick to make shared libraries for fftw!


HP-UX 10.20 may need

   --with-extra-cppflags="-D_HPUX_SOURCE"


Mac OS X (10.2.x, possibly 10.1.x, but NOT 10.3.x) with bundled cc/gcc:

  * Configure with:  --with-extra-cflags="-D_ANSI_SOURCE -no-cpp-precomp"

  * Note: I (Jolien) don't need these with 10.2 ... perhaps it depends
    on the version of the developer tools.  Also, do NOT use these flags
    with 10.3.


TROUBLESHOOTING

* If you need to re-run configure after it has failed while checking for
  a working FFTW, FrameL, Metaio, or GSL, make sure to remove the file
  config.cache.

* The configure script assumes that ranlib is necessary unless it cannot
  find the program in your path.  If ranlib is on your path and you don't
  need ranlib, set the environment RANLIB to echo.

* "make dvi" must be run after "make" since make dvi requires the program
  laldoc must be compiled for "make dvi" to work.

* If you want to use a different latex program than the one chosen by
  the configure script, set it in the environment variable LATEX.  Also,
  if you want to have different tex flags (e.g., you want to disable
  the batchmode that the configure script uses) set the TEXFLAGS
  environment variable to the flags you want (or a space if you don't
  want any flags used).

* If you want to make a shared library version (default) of LAL with
  the frame library, you need to make a shared library version of fftw
  and the frame too.  To make a static LAL library only, use the
  --disable-shared option when configuring LAL.
