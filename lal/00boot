#!/bin/sh

## This is a script for the software librarian to use to generate neccessary
## files from the minimal set in the cvs archive.
##
## This script is not to be included in the distribution.
##
## $Id$

## LAL version:
package=lal
version=3.0

## Add a new package here:

# Base (non-conditionally-compiled) packages:
lal_pkg_list_base="support tools sample hello factories vectorops utilities stats inject date tdfilter window fft clremoval stochastic inspiral noisemodels bank ring findchirp pulsar houghpulsar fct burstsearch tracksearch tfclusters slopefilters waveburst block"

# Packages compiled only with --enable-mpi
lal_pkg_list_mpi="comm"

# Packages compiled only with --enable-frame
lal_pkg_list_frame="framedata"

# Packages compiled only with --enable-mpi and --enable-frame
lal_pkg_list_frame_mpi=""

# Packages that are omitted
lal_pkg_list_omit="timefreq"

## <<<< !!!!  Do not edit below here !!!! >>>> ##

# All packages
lal_pkg_list="std $lal_pkg_list_base $lal_pkg_list_mpi $lal_pkg_list_frame $lal_pkg_list_frame_mpi $lal_pkg_list_omit"

# Help message
helpmsg="Usage $0 [options]
Options: [defaults in brackets after description]"
helpmsg="$helpmsg
  --help                        print this message"
helpmsg="$helpmsg
  --with-aclocal=ACLOCAL        use aclocal program ACLOCAL [aclocal]"
helpmsg="$helpmsg
  --with-automake=AUTOMAKE      use automake program AUTOMAKE [automake]"
helpmsg="$helpmsg
  --with-autoheader=AUTOHEADER  use autoheader program AUTOHEADER [autoheader]"
helpmsg="$helpmsg
  --with-autoconf=AUTOCONF      use autoconf program AUTOCONF [autoconf]"
helpmsg="$helpmsg
  --include-deps                pass option --include-deps to automake [no]"

INCLUDEDEPS=""

## Process args
while test $# -gt 0 ; do
  option=$1
  case "$option" in
    -*=*) optarg=`echo "$option" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
    *) optarg= ;;
  esac
  case $option in
    -h | -help | --help ) echo "$helpmsg"; exit 0;;
    -include-deps | --include-deps ) INCLUDEDEPS=" --include-deps";;
    -with-automake=* | --with-automake=* ) AUTOMAKE="$optarg";;
    -with-aclocal=* | --with-aclocal=* ) ACLOCAL="$optarg";;
    -with-autoconf=* | --with-autoconf=* ) AUTOCONF="$optarg";;
    -with-autoheader=* | --with-autoheader=* ) AUTOHEADER="$optarg";;
    *) echo "unrecognized option $option"; exit 1;;
  esac
  shift
done

if test -z "$AUTOMAKE" ; then
  for AUTOMAKE in automake automake-1.8 automake-1.5 automake ; do
    case "`$AUTOMAKE --version 2>/dev/null`" in
      *\ 1.8*) break;;
      *\ 1.5*) break;;
      *\ 1.7*) break;;
      *\ 1.6*) break;;
    esac
  done
fi

if test -z "$ACLOCAL" ; then
  for ACLOCAL in aclocal aclocal-1.8 aclocal-1.5 aclocal ; do
    case "`$ACLOCAL --version 2>/dev/null`" in
      *\ 1.8*) break;;
      *\ 1.5*) break;;
      *\ 1.7*) break;;
      *\ 1.6*) break;;
    esac
  done
fi

AUTOMAKE="${AUTOMAKE:-automake}"
ACLOCAL="${ACLOCAL:-aclocal}"
AUTOCONF="${AUTOCONF:-autoconf}"
AUTOHEADER="${AUTOHEADER:-autoheader}"
automake_version="`$AUTOMAKE --version 2>/dev/null | sed -n '1s/[^0-9.]*//p'`"
aclocal_version="`$ACLOCAL --version 2>/dev/null | sed -n '1s/[^0-9.]*//p'`"
autoheader_version="`$AUTOHEADER --version 2>/dev/null | sed -n '1s/[^0-9.]*//p'`"
autoconf_version="`$AUTOCONF --version 2>/dev/null | sed -n '1s/[^0-9.]*//p'`"
if test -z "$automake_version"; then
  echo "Error: missing program automake"
  exit 1
fi
case "$automake_version" in
  1.4* )
  echo "Warning: Using version 1.4 of aclocal/automake may not work."
  echo "         Recommend using aclocal/automake version 1.8."
  ;;
  1.6* | 1.7* )
  echo "Warning: Using version 1.6/1.7 of aclocal/automake may cause build"
  echo "         problems: If you modify any Makefile.am file you must re-run"
  echo "         the top-level config.status before doing a make."
  ;;
esac
if test -z "$aclocal_version"; then
  echo "Error: missing program aclocal"
  exit 1
fi
case "$aclocal_version" in
  1.4* )
  echo "Warning: Using version 1.4 of aclocal/automake may not work."
  echo "         Recommend using aclocal/automake version 1.8."
  ;;
  1.6* | 1.7* )
  echo "Warning: Using version 1.6/1.7 of aclocal/automake may cause build"
  echo "         problems: If you modify any Makefile.am file you must re-run"
  echo "         the top-level config.status before doing a make."
  ;;
esac
case "$autoconf_version" in
  2.5*)
  CONFIGFILE="configure.ac"
  AUTOCONF25="yes"
  ;;
  2.1*)
  CONFIGFILE="configure.in"
  AUTOCONF25="no"
  ;;
esac

echo "Using:
aclocal-"$aclocal_version": 	`which $ACLOCAL`
automake-"$automake_version": 	`which $AUTOMAKE`
autoheader-"$autoheader_version": 	`which $AUTOHEADER`
autoconf-"$autoconf_version": 	`which $AUTOCONF`"


## Here is the stuff to make configure.in or configure.ac
rm -f configure.in configure.ac

# Preamble
if test "$AUTOCONF25" = "yes" ; then
cat > $CONFIGFILE <<EOF
AC_INIT([$package],[$version],[lal-discuss@gravity.phys.uwm.edu])
AM_INIT_AUTOMAKE([])
AM_CONFIG_HEADER([include/config.h] [include/lal/LALConfig.h])
AH_TOP([
#ifndef CONFIG_H__LAL
#define CONFIG_H__LAL
])
AH_TEMPLATE([LAL_SIZEOF_DOUBLE], [The number of bytes in a double.])
AH_TEMPLATE([LAL_SIZEOF_FLOAT], [The number of bytes in a float.])
AH_TEMPLATE([LAL_SIZEOF_INT], [The number of bytes in a int.])
AH_TEMPLATE([LAL_SIZEOF_LONG], [The number of bytes in a long.])
AH_TEMPLATE([LAL_SIZEOF_LONG_LONG], [The number of bytes in a long long.])
AH_TEMPLATE([LAL_SIZEOF_SHORT], [The number of bytes in a short.])
AH_BOTTOM([
#endif /* CONFIG_H__LAL */
])
EOF
else
cat > $CONFIGFILE <<EOF
dnl Process this file with autoconf to produce a configure script.
AC_INIT(include/config.h.in)
AM_INIT_AUTOMAKE($package, $version)
AM_CONFIG_HEADER(include/config.h include/lal/LALConfig.h)
EOF
fi

# Body
cat >> $CONFIGFILE <<\EOF
lal_version_major=`echo "$VERSION" | cut -d. -f1`
lal_version_minor=`echo "$VERSION" | cut -d. -f2`
lal_configure_date=`date +"%Y-%m-%dT%H:%M:%S%z"`
lal_cvs_tag=`echo '$Name$' | sed 's/\\$//g' | sed 's/Name: //'`
AC_DEFINE_UNQUOTED(LAL_VERSION, "$VERSION", [LAL Version])
AC_DEFINE_UNQUOTED(LAL_VERSION_MAJOR, $lal_version_major, [LAL Version Major Number] )
AC_DEFINE_UNQUOTED(LAL_VERSION_MINOR, $lal_version_minor, [LAL Version Minor Number] )
AC_DEFINE_UNQUOTED(LAL_CONFIGURE_ARGS, "$ac_configure_args", [LAL Configure Arguments])
AC_DEFINE_UNQUOTED(LAL_CONFIGURE_DATE, "$lal_configure_date", [LAL Configure Date])
AC_DEFINE_UNQUOTED(LAL_CVS_TAG, "$lal_cvs_tag", [LAL CVS Tag])

LAL_WITH_CC
LAL_WITH_MPICC
LAL_WITH_CFLAGS
LAL_WITH_EXTRA_CFLAGS
LAL_WITH_EXTRA_CPPFLAGS
LAL_WITH_EXTRA_LDFLAGS
LAL_WITH_EXTRA_LIBS
LAL_WITH_GCC_FLAGS

LAL_ENABLE_FFTW3
LAL_ENABLE_INTELFFT
LAL_ENABLE_FRAME
LAL_ENABLE_MPI
LAL_ENABLE_DATAFLOW
AM_CONDITIONAL(FRAME, test x$frame = xtrue)
AM_CONDITIONAL(MPI, test x$mpi = xtrue)
AM_CONDITIONAL(FRAMEANDMPI, test x$frame = xtrue -a x$mpi = xtrue)
AM_CONDITIONAL(METAIO, test x$dataflow = xtrue)
AM_CONDITIONAL(INTELFFT, test x$intelfft = xtrue)
AM_CONDITIONAL(QTHREAD, test x$qthread = xtrue)

LAL_ENABLE_DEBUG
LAL_ENABLE_MACROS
LAL_ENABLE_PTHREAD_LOCK

dnl Checks for programs.
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AM_PROG_LIBTOOL
AC_CHECK_PROGS(LATEX, pdflatex latex, echo)
AC_CHECK_PROGS(MKIND, makeindex, echo)
AC_CHECK_PROGS(DVIPS, dvips, echo)
if test -z "$TEXFLAGS"
then
AC_MSG_CHECKING(if $LATEX accepts --interaction=batchmode)
cat > conflatextest.tex <<\CEOF
\documentclass{article}
\begin{document}
\end{document}
CEOF
if $LATEX conflatextest.tex --interaction=batchmode >/dev/null 2>&1
then
TEXFLAGS="--interaction=batchmode"
AC_MSG_RESULT(yes)
else
TEXFLAGS=""
AC_MSG_RESULT(no)
fi
rm -f conflatextest.*
fi
AC_SUBST(TEXFLAGS)

dnl Set needed compiler flags
AC_MSG_CHECKING([for additional compiler flags])
case "${host_os}" in
  solaris*) CFLAGS="$CFLAGS -D_POSIX_C_SOURCE=200101L"
  AC_MSG_RESULT([-D_POSIX_SOURCE=200101L]);;
  *) AC_MSG_RESULT(none);;
esac

dnl Checks for libraries.
lal_save_LIBS="$LIBS"
AC_CHECK_LIB(m, sin)
AC_CHECK_LIB(gslcblas, main)
AC_CHECK_LIB(gsl, gsl_strerror, , [AC_MSG_ERROR(could not find GSL library)])
dnl if solaris, check for sunmath library
case "${host_os}" in
  solaris*) AC_CHECK_LIB(sunmath, sincosp);;
esac

dnl Checks for fft libraries.
if test "${intelfft}" = "false" ; then
  lal_save_pre_fftw3_LIBS="$LIBS"
  if test "${fftw3}" = "true"; then
    AC_CHECK_LIB(fftw3f, fftwf_execute_dft, , [AC_MSG_WARN(disabling fftw3)]
      [fftw3="false"], -lm)
  fi
  if test "${fftw3}" = "true"; then
    AC_CHECK_LIB(fftw3, fftw_execute_dft, , , -lm)
  fi
  if test "${fftw3}" = "true"; then
    AC_CHECK_HEADERS(fftw3.h, , [AC_MSG_WARN(disabling fftw3)]
      [fftw3="false"])
  fi
  if test "${fftw3}" = "true"; then
    AC_DEFINE(LAL_FFTW3_ENABLED,1,Define if using fftw3 library)
  else
    LIBS="$lal_save_pre_fftw3_LIBS"
    AC_SEARCH_LIBS(fftw_one, sfftw fftw, , LAL_FFTW_MSG_ERROR, -lm)
    AC_SEARCH_LIBS(rfftw_one, srfftw rfftw, , LAL_FFTW_MSG_ERROR, -lm)
    AC_CHECK_HEADERS(sfftw.h fftw.h, break)
    AC_CHECK_HEADERS(srfftw.h rfftw.h, break)
  fi
else
  AC_MSG_WARN(Using Intel FFT routines)
  if test "x${qthread}" = "xtrue" ; then
    LAL_INTEL_MKL_QTHREAD_WARNING
  else
    AC_CHECK_LIB(pthread, pthread_create, , [AC_MSG_ERROR(could not find pthread library)])
  fi
  AC_CHECK_LIB(guide, __kmp_abort, , [AC_MSG_ERROR(could not find pthread library)])
  AC_CHECK_HEADERS(pthread.h, , [AC_MSG_ERROR(could not find pthread header)])
  if test "${enable_static}" = "yes"; then
    if test "${enable_shared}" = "yes" ; then
      LAL_INTEL_FFT_LIBS_MSG_ERROR
    else
      AC_CHECK_LIB(mkl_ia32, DftiCreateDescriptor, , [AC_MSG_ERROR(could not find the Intel FFT library)])
    fi  
  else
    AC_CHECK_LIB(mkl, DftiCreateDescriptor, , [AC_MSG_ERROR(could not find the Intel FFT library)])
  fi
  AC_CHECK_HEADERS(mkl_fft.h, , [AC_MSG_ERROR(could not find Intel FFT header)])
fi

if test "${dataflow}" = "true"; then
  AC_SEARCH_LIBS(MetaioOpen, metaio dataflow, , AC_MSG_ERROR(could not find the metaio/dataflow library))
fi


dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(sys/time.h unistd.h getopt.h malloc.h)
AC_CHECK_HEADERS(gsl/gsl_errno.h, , [AC_MSG_ERROR(could not find gsl/gsl_errno.h)])
case "${host_os}" in
  solaris*) AC_CHECK_HEADERS(sunmath.h);;
esac

AC_MSG_CHECKING(for gethostname prototype in unistd.h)
AC_EGREP_HEADER(gethostname,unistd.h,AC_MSG_RESULT(yes)
AC_DEFINE(HAVE_GETHOSTNAME_PROTOTYPE,1,
[Define if gethostname prototype is in unistd.h]),
AC_MSG_RESULT(no))
if test "${dataflow}" = "true"; then
  AC_CHECK_HEADERS(metaio.h, , AC_MSG_ERROR(could not find metaio.h))
fi


dnl AC_TRY_RUN needs to be done with libtool to avoid requirement of setting
dnl LD_LIBRARY_PATH... redefine ac_link to use libtool:
ac_link="./libtool $ac_link"
if test "${fftw3}" = "false"; then
  if test "${intelfft}" = "false"; then
    LAL_SFFTW_WORKS
    LAL_SRFFTW_WORKS
  fi
fi

dnl Checks for optional libraries and header files.
LAL_CFLAGS="-I$includedir/lal"
if test "${frame}" = "true"; then
  AC_DEFINE(LAL_FRAME_ENABLED,1,Define if using Frame library)
  LAL_CHECK_FRAMELIB
  LAL_FRAME_ENABLED="yes"
else
  LAL_FRAME_ENABLED="no"
fi
if test "${mpi}" = "true"; then
  AC_DEFINE(LAL_MPI_ENABLED,1,Define if using MPI)
  LAL_CHECK_MPI
  LAL_MPI_ENABLED="yes"
  LAL_CFLAGS="$LAL_CFLAGS $MPICFLAGS $MPICPPFLAGS"
else
  LAL_MPI_ENABLED="no"
fi
if test "${dataflow}" = "true"; then
  AC_DEFINE(LAL_METAIO_ENABLED,1,Define if using MetaIo library)
  LAL_METAIO_ENABLED="yes"
else
  LAL_METAIO_ENABLED="no"
fi
if test "${lal_pthread_lock}" = "true"; then
  AC_CHECK_HEADERS(pthread.h, break)
fi

LALLIBADD="$LIBS"
LIBS="$lal_save_LIBS"
AC_SUBST(LALLIBADD)
LAL_LIBADD="$LIBS $LALLIBADD"
LAL_LIBS="-L$libdir -llal $LAL_LIBADD"
AC_SUBST(LAL_LIBADD)
AC_SUBST(LAL_LIBS)
AC_SUBST(LAL_CFLAGS)
AC_SUBST(LAL_MPI_ENABLED)
AC_SUBST(LAL_FRAME_ENABLED)
AC_SUBST(LAL_METAIO_ENABLED)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_BIGENDIAN
AC_C_CONST
AC_C_STRINGIZE
AC_TYPE_SIZE_T
AC_HEADER_TIME
LAL_CHECK_SIZEOF(short, 2)
LAL_CHECK_SIZEOF(int, 4)
LAL_CHECK_SIZEOF(long, 4)
LAL_CHECK_SIZEOF(long long, 8)
LAL_CHECK_SIZEOF(float, 4)
LAL_CHECK_SIZEOF(double, 8)

dnl Checks for library functions.
AC_CHECK_FUNCS(getopt)
AC_CHECK_FUNCS(getopt_long)
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(vsnprintf)
AC_CHECK_FUNCS(putenv)

dnl Add gcc specific flags --- must be done at end or tests will break!
if test "$GCC" = yes; then
  CFLAGS="$CFLAGS $lal_gcc_flags"
fi
EOF

# Substitutions
printf "LIBLISTBASE='" >> $CONFIGFILE
for pkg in $lal_pkg_list_base ; do
  printf "\$(top_builddir)/packages/$pkg/src/lib$pkg.la " >> $CONFIGFILE
done
echo "'" >> $CONFIGFILE

printf "LIBLISTMPI='" >> $CONFIGFILE
for pkg in $lal_pkg_list_mpi ; do
  printf "\$(top_builddir)/packages/$pkg/src/lib$pkg.la " >> $CONFIGFILE
done
echo "'" >> $CONFIGFILE

printf "LIBLISTFRAME='" >> $CONFIGFILE
for pkg in $lal_pkg_list_frame ; do
  printf "\$(top_builddir)/packages/$pkg/src/lib$pkg.la " >> $CONFIGFILE
done
echo "'" >> $CONFIGFILE

printf "LIBLISTMPIFRAME='" >> $CONFIGFILE
for pkg in $lal_pkg_list_mpi_frame ; do
  printf "\$(top_builddir)/packages/$pkg/src/lib$pkg.la " >> $CONFIGFILE
done
echo "'" >> $CONFIGFILE

cat >> $CONFIGFILE <<EOF
if test x\$mpi = xfalse; then
  LIBLISTMPI=
  LIBLISTMPIFRAME=
fi
if test x\$frame = xfalse; then
  LIBLISTFRAME=
  LIBLISTMPIFRAME=
fi
PKGLIST="$lal_pkg_list"
AC_SUBST(PKGLIST)
AC_SUBST(LIBLISTBASE)
AC_SUBST(LIBLISTMPI)
AC_SUBST(LIBLISTFRAME)
AC_SUBST(LIBLISTMPIFRAME)
EOF

# Output
if test "$AUTOCONF25" = "yes"; then
cat >> $CONFIGFILE <<\EOF
AC_OUTPUT_COMMANDS([chmod +x lal-config])
AC_CONFIG_FILES([lal.pc])
AC_CONFIG_FILES([lal-config])
AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([doc/Makefile])
AC_CONFIG_FILES([doc/laldoc/Makefile])
AC_CONFIG_FILES([doc/autodoc/Makefile])
AC_CONFIG_FILES([include/Makefile])
AC_CONFIG_FILES([include/lal/Makefile])
AC_CONFIG_FILES([lib/Makefile])
AC_CONFIG_FILES([packages/Makefile])
EOF
for pkg in $lal_pkg_list; do
  pkgdir=packages/$pkg
  echo "AC_CONFIG_FILES([$pkgdir/Makefile])" >> $CONFIGFILE
  echo "AC_CONFIG_FILES([$pkgdir/doc/Makefile:$pkgdir/doc/Makefile.in:misc/doc.mk])" >> $CONFIGFILE
  echo "AC_CONFIG_FILES([$pkgdir/include/Makefile:$pkgdir/include/Makefile.in:misc/include.mk:misc/dvi.mk])" >> $CONFIGFILE
  echo "AC_CONFIG_FILES([$pkgdir/src/Makefile:$pkgdir/src/Makefile.in:misc/dvi.mk])" >> $CONFIGFILE
  echo "AC_CONFIG_FILES([$pkgdir/test/Makefile:$pkgdir/test/Makefile.in:misc/dvi.mk])" >> $CONFIGFILE
done
echo "AC_OUTPUT" >> $CONFIGFILE
else
cat >> $CONFIGFILE <<\EOF
AC_OUTPUT_COMMANDS([chmod +x lal-config])
AC_OUTPUT([ \
  lal.pc \
  lal-config \
  Makefile \
  doc/Makefile \
  doc/laldoc/Makefile \
  doc/autodoc/Makefile \
  include/Makefile \
  include/lal/Makefile \
  lib/Makefile \
  packages/Makefile \
EOF
for pkg in $lal_pkg_list; do
  pkgdir=packages/$pkg
  echo "  $pkgdir/Makefile \\" >> $CONFIGFILE
  echo "  $pkgdir/doc/Makefile:$pkgdir/doc/Makefile.in:misc/doc.mk \\" >> $CONFIGFILE
  echo "  $pkgdir/include/Makefile:$pkgdir/include/Makefile.in:misc/include.mk:misc/dvi.mk \\" >> $CONFIGFILE
  echo "  $pkgdir/src/Makefile:$pkgdir/src/Makefile.in:misc/dvi.mk \\" >> $CONFIGFILE
  echo "  $pkgdir/test/Makefile:$pkgdir/test/Makefile.in:misc/dvi.mk \\" >> $CONFIGFILE
done
echo "])" >> $CONFIGFILE
fi


## Now generate acinclude.m4 and acconfig.h (if needed)

rm -f acinclude.m4 acconfig.h
cat misc/lal.m4 > acinclude.m4
case "$automake_version" in
  1.5*)
  cat misc/lalam15patch.m4 >> acinclude.m4
  ;;
esac

cat misc/lallibtool.m4 >> acinclude.m4
case "$autoconf_version" in
  2.1*)
  cp misc/acconfig.h acconfig.h
  ;;
esac


## Now run m4 to generate sources

cd packages/support/src
m4 Grid.m4 > Grid.c
m4 PrintVector.m4 > PrintVector.c
m4 PrintTimeSeries.m4 > PrintTimeSeries.c
m4 PrintFrequencySeries.m4 > PrintFrequencySeries.c
m4 ReadFrequencySeries.m4 > ReadFrequencySeries.c
m4 ReadTimeSeries.m4 > ReadTimeSeries.c
m4 StreamVectorInput.m4 > StreamVectorInput.c
m4 StreamVectorSequenceInput.m4 > StreamVectorSequenceInput.c
m4 StreamSequenceInput.m4 > StreamSequenceInput.c
m4 StreamSeriesInput.m4 > StreamSeriesInput.c
m4 StreamSeriesOutput.m4 > StreamSeriesOutput.c
m4 StreamGridInput.m4 > StreamGridInput.c
m4 StreamGridOutput.m4 > StreamGridOutput.c
cd ../../..

cd packages/factories/src
m4 VectorFactories.m4 > VectorFactories.c
m4 VectorSequenceFactories.m4 > VectorSequenceFactories.c
m4 ArrayFactories.m4 > ArrayFactories.c
m4 ArraySequenceFactories.m4 > ArraySequenceFactories.c
cd ../../..

cd packages/factories/include
m4 SeqFactoriesH.m4 > SeqFactories.h
m4 AVFactoriesH.m4 > AVFactories.h
cd ../../..

cd packages/factories/test
m4 VectorFactoriesTest.m4 > VectorFactoriesTest.c
m4 VectorSequenceFactoriesTest.m4 > VectorSequenceFactoriesTest.c
m4 ArrayFactoriesTest.m4 > ArrayFactoriesTest.c
m4 ArraySequenceFactoriesTest.m4 > ArraySequenceFactoriesTest.c
cd ../../..

cd packages/vectorops/src
m4 MatrixDivide.m4 > MatrixDivide.c
m4 MatrixMultiply.m4 > MatrixMultiply.c
m4 MatrixPower.m4 > MatrixPower.c
m4 MiscMatlab.m4 > MiscMatlab.c
m4 VectorIndexRangeC.m4 > VectorIndexRange.c
cd ../../..

cd packages/vectorops/include
m4 VectorIndexRangeH.m4 > VectorIndexRange.h
cd ../../..

cd packages/utilities/src
m4 MatrixOps.m4 > MatrixOps.c
cd ../../..

cd packages/stats/src
m4 LALMoment.m4 > LALMoment.c
cd ../../..

cd packages/comm/src
m4 SendRecv.m4 > SendRecv.c
m4 Exchange.m4 > Exchange.c
cd ../../..

cd packages/ring/src
m4 LALRingDown.m4 > LALRingDown.c
cd ../../..

cd packages/framedata/src
m4 FrameSeries.m4 > FrameSeries.c
cd ../../..

cd packages/pulsar/test
/bin/sh ephemtoilwd.sh earth98.dat > earth98.ilwd
/bin/sh ephemtoilwd.sh sun98.dat > sun98.ilwd
/bin/sh ephemtoilwd.sh earth99.dat > earth99.ilwd
/bin/sh ephemtoilwd.sh sun99.dat > sun99.ilwd
/bin/sh ephemtoilwd.sh earth00.dat > earth00.ilwd
/bin/sh ephemtoilwd.sh sun00.dat > sun00.ilwd
/bin/sh ephemtoilwd.sh earth01.dat > earth01.ilwd
/bin/sh ephemtoilwd.sh sun01.dat > sun01.ilwd
/bin/sh ephemtoilwd.sh earth02.dat > earth02.ilwd
/bin/sh ephemtoilwd.sh sun02.dat > sun02.ilwd
cd ../../..

## Generate the Makefile.in's and the configure script

$ACLOCAL
$AUTOHEADER
$AUTOMAKE $INCLUDEDEPS
$AUTOCONF
