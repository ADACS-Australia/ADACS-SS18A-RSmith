
*******************************************************************************

A message from the librarian:

When developing a package for LAL, please test the code with gcc using the
following compiler flags:

  -g3 -O4 -ansi -Werror -Wall -W -Wmissing-prototypes -Wstrict-prototypes
  -Wshadow -Wpointer-arith -Wcast-qual -Wcast-align -Wwrite-strings
  -Waggregate-return -fshort-enums -fno-common -Wnested-externs
  -D__NO_STRING_INLINES

These flags provide a useful way to detect potential bugs.  (The
-D__NO_STRING_INLINES turns off a bug in one of the include files on Linux
systems).

You can turn on these flags when configuring LAL (with gcc as the compiler)
using the --with-gcc-flags configure option.

*******************************************************************************

There are two ways of developing code for a LAL package:

(i)  installing LAL on you system and developing your package outside the lal
     source tree using your own custom makefiles

(ii) developing your package within the LAL source tree and allowing the lal
     configure script to generate the makefiles for you.

This file explains how to develop code using the second method. To do this you
will need automake installed on your system. This is available from

ftp://ftp.gnu.org/software/automake

This example shows how to add a package called "mypackage" to LAL.

( 1) Create a directory mypackage in the packages subdirectory of your lal
     source distribution:

       cd packages
       mkdir mypackage

( 2) The mypackage directory should contain subdirectories src, include, doc
     and test and a Makefile.am that contains the single line:
     SUBDIRS = include src test doc

       cd mypackage   
       mkdir include src test doc
       echo "SUBDIRS = include src test doc" > Makefile.am

( 3) Enter the doc directory and copy doc/Makefile.am from packages/sample

       cd doc
       cp ../../sample/doc/Makefile.am .

     Edit this Makefile.am and change the line
   
       PACKAGE = sample

     to

       PACKAGE = mypackage

     See the Appendix (below) for a discussion of the texfiles that need to be
     created in the doc directory.

( 4) Enter the include directory and copy include/Makefile.am from
     packages/sample

       cd ../include
       cp ../../sample/include/Makefile.am .

     Change this Makefile.am as follows:
     
     (a) change the line

         pkginclude_HEADERS = LALSample.h LALTemplate.h

         to list all the header files in your package, for example if the
         header files were called MyHeaderA.h MyHeaderB.h and MyHeaderC.h,
         this line would read:

         pkginclude_HEADERS = MyHeaderA.h MyHeaderB.h MyHeaderC.h
     
     (b) make sure all your headers are listed in the "all-local:" dependency,
         so change this from
     
         all-local: $(top_builddir)/include/lal/LALSample.h   \
                    $(top_builddir)/include/lal/LALTemplate.h
     
         to
     
         all-local: $(top_builddir)/include/lal/MyHeaderA.h \
                    $(top_builddir)/include/lal/MyHeaderB.h \
                    $(top_builddir)/include/lal/MyHeaderC.h
     
         Note the backslash to continue the line until the last header.
     
     (c) for each header file listed in all-local there should be a make
         instruction to copy the header to the top level-include directory:
     
          $(top_builddir)/include/lal/MyHeaderA.h: MyHeaderA.h
                cp -f $(srcdir)/MyHeaderA.h $(top_builddir)/include/lal

          and so on, remembering that it should be a <TAB> on the second
          line, not spaces.

( 5) Enter the src directory and copy src/Makefile.am from packages/sample

       cd ../src
       cp ../../sample/src/Makefile.am .
                                             
     In this Makefile.am change every "libsample" to "libmypacakage". Change
                                                                           
     noinst_LTLIBRARIES = libsample.la                                     

     to

     noinst_LTLIBRARIES = libmypackage.la
                                         
     and change
     
     libsample_la_SOURCES = LALSample.c LALTemplate.c
     
     to list your source files, for example
     
     libmypackage_la_SOURCES = MySourceA.c MySourceB.c MySourceC.c
         
     If your package requires any of the optional packages in LAL (frame
     and/or mpi) use the Makefile.am's in
     packages/[framedata|comm|findchirp]/src
     as a guide to constructing your own.

         
( 6) Enter the test directory and copy test/Makefile.am from packages/sample
     
       cd ../test
       cp ../../sample/test/Makefile.am .
         
     Change the line
                    
     check_PROGRAMS = LALSampleTest LALTemplateTest
                                                   
     to list the names of the test programs you wish to run, for example
                    
     check_PROGRAMS = MyTestProgA MyTestProgB
                                             
     For each test program, there should be two lines that list the sources
     and link them to LAL. Change the lines                                
     
     LALSampleTest_SOURCES = LALSampleTest.c
     LALSampleTest_LDADD = $(top_builddir)/lib/liblal.la
     LALTemplateTest_SOURCES = LALTemplateTest.c
     LALTemplateTest_LDADD = $(top_builddir)/lib/liblal.la
                                                          
     to
          
     MyTestProgA_SOURCES = MyTestProgA.c
     MyTestProgA_LDADD = $(top_builddir)/lib/liblal.la
     MyTestProgB_SOURCES = MyTestProgB.c              
     MyTestProgB_LDADD = $(top_builddir)/lib/liblal.la
     
     and the line                            
     
     TESTS = LALSampleTest LALTemplateTest                                 
     
     should list the test programs you want run at make check (generally
     the same as check_PROGRAMS)                                        
                                
     TESTS = MyTestProgA MyTestProgB
                                         
( 7) Go up to the packages directory and edit the Makefile.am there
                                                                  
       cd ../..
       vi Makefile.am
     
     Add your package to the "SUBDIRS =" line:
     
     SUBDIRS = std support sample hello factories vectorops utilities date \
               tdfilter window fft timefreq stochastic inspiral framedata  \
               comm findchirp burstsearch tracksearch mypackage
     
( 8) Go up to the lib directory at the top level and edit the Makefile.am
     there                                                               

       cd ../lib
       vi Makefile.am
     
     Add your package to the "liblal_la_LIBADD =" line by adding the line
     
           $(top_builddir)/packages/support/src/libmypackage.la           \
     
     before the line                               
     
           $(PKG_FRAME) $(PKG_MPI) $(PKG_FRAMEANDMPI)
     
     If your package depends on frame or mpi, read the instructions in the
     Makefile.am
     
( 9) Go to the top level and edit the file configure.in
     
       cd ..
       vi configure.in  
     
     At the bottom of this file is a large section that begins
                                                              
     AC_OUTPUT( Makefile                               \
     
     At the end of this section, before the closing brace, add the Makefiles
     to be generated in your package. To do this, just add the lines        
     
           packages/mypackage/Makefile          \
           packages/mypackage/doc/Makefile      \
           packages/mypackage/include/Makefile  \
           packages/mypackage/src/Makefile      \                          
           packages/mypackage/test/Makefile     \
     
(10) Now at the top level, you need to run automake to generate the Makefile.in
     files from the Makefile.am                                                
     
       automake  

     Now run autoconf to rebuild the configure script             
     
       autoconf
                                       
     Ignore any warnings about "AC_TRY_RUN called without default to allow cross
     compiling"
     
     This completes the process of adding your package. You can now follow
     the instructions in the INSTALL file to configure and make LAL.



Appendix: how to use laldoc to generate documentation.

     The makefile in the doc directory uses the program laldoc and the script
     ldoc-pkg.sh to extract documentation from the .c and .h files.  These
     files are found in the doc/laldoc directory.  If you have not yet made
     LAL, you can create these files by typing

       cd doc/laldoc
       make

     Now return to the doc subdirectory of mypackage

       cd ../../packages/mypackage/doc

     In this directory there needs to be two texfiles:

     main.tex:      this file is used to make the documentation in the
                    packages/mypackage/doc directory

     mypackage.tex: this file is read by main.tex to make the documentation
                    in the packages/mypackage/doc directory and is also read
                    by lsd.tex in the top-level doc directory to make the
                    mypackage documentation in the lsd

     The main.tex file is almost the same in all directories.  First, copy the
     main.tex from the sample package

       cp ../../sample/doc/main.tex .

     then edit the file and replace support.tex with mypackage.tex.

     The mypackage.tex file does three things: (i) it begins a new chapter of
     documentation for the package mypackage, (ii) it writes a blurb about what
     the package is for, and (iii) it inputs the documentation for each module
     that is contained in the package.

     The contents of mypackage.tex should look something like the following:
     
     \chapter{Package: \texttt{mypackage}}
     This package does the things that I want to do.
     \newpage\input{MyHeaderAH}
     \newpage\input{MyHeaderBH}
     \newpage\input{MyHeaderCH}

     (Recall that mypackage had three header in the include directory called
     MyHeaderA.h MyHeaderB.h and MyHeaderC.h)

     Finally, any figures should be included in the doc directory.  These
     figures should begin with the package name, e.g., mypackageFig1.eps,
     mypackageFig1a.eps, mypackagePicture.eps, etc.  Both eps and pdf versions
     of the figures should be present.

     If everything is correct, then you should be able to generate the
     documentation for your package by issuing the command

       ../../../doc/laldoc/ldoc-pkg.sh mypackage

     or by typing

       make dvi

     (which does essentially the same thing).
