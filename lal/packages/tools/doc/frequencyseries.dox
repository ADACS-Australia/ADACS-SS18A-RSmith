/**

\addtogroup FrequencySeriesManipulation
\author Kipp Cannon <kipp@gravity.phys.uwm.edu>

\brief This is a suite of functions for creating, destroying, and manipulating LAL
frequency series.  One pair of functions (the XLAL version and its LAL
counterpart) is available for each method and frequency series type.  For
example XLALCreateREAL4FrequencySeries() is available for creating
frequency series of \c REAL4 data, and the LAL-stype wrapper
LALCreateREAL4FrequencySeries() is provided which is equivalent to
the XLAL version in all respects except that it adheres to the LAL calling
conventions (eg.\ it takes a \c LALStatus pointer as its first
argument, its return type is \c void, etc.).

\section sec_FS_Creation Creation Functions

\heading{Synopsis}

\code
#include <lal/FrequencySeries.h>

XLALCreate<frequencyseriestype>()
LALCreate<frequencyseriestype>()
\endcode

\heading{Description}

These functions create LAL frequency series.  An XLAL function returns a
pointer to the newly created series or \c NULL on failure.  The LAL
counterpart accepts the address of a pointer which it fills with the
address of the newly created series or \c NULL on failure.
Additionally, the LAL wrapper provides standard LAL-style error checking
via a \c LALStatus pointer.

\section sec_FS_Destruction Destruction Functions

\heading{Synopsis}

\code
#include <lal/FrequencySeries.h>

XLALDestroy<frequencyseriestype>()
LALDestroy<frequencyseriestype>()
\endcode

\heading{Description}

These functions free all memory associated with a LAL frequency series.  It
is safe to pass \c NULL to these functions.

\subsection sec_FS_Cutting Cutting Functions

\heading{Synopsis}

\code
#include <lal/FrequencySeries.h>

XLALCut<frequencyseriestype>()
\endcode

\heading{Description}

These functions create a new frequency series by extracting a section of an
existing frequency series.

\subsection sec_FS_Resizing Resizing Functions

\heading{Synopsis}

\code
#include <lal/FrequencySeries.h>

XLALResize<frequencyseriestype>()
XLALShrink<frequencyseriestype>()
LALShrink<frequencyseriestype>()
\endcode

\heading{Description}

These functions resize an existing frequency series.  The new frequency
series will have the given length, and its contents will consist of that
part of the original time series that started at sample \c first.  If
\c first is negative, then the new time series is padded at the start
by that many samples.  The frequency series' heterodyne frequency,
(f_{0}), is adjusted appropriately.

The "Shrink" functions accept non-negative values for the parameter
\c first, and are retained only for historical purposes.  New code
should use the "Resize" variants.

\subsection sec_FS_Addition Addition Functions

\heading{Synopsis}

\code
#include <lal/FrequencySeries.h>

XLALAdd<frequencyseriestype>()
\endcode

\heading{Description}

These functions add the second argument to the first argument, returning a
pointer to the first argument on success or NULL on failure.  The two
series must have the same epoch and frequency resolution, and have units
that differ only by a dimensionless factor.

\subsection sec_FS_Conjugate Conjugation Functions

\heading{Synopsis}

\code
#include <lal/FrequencySeries.h>

XLALConjugate<frequencyseriestype>()
\endcode

\heading{Description}

These functions replace a frequency series with its complex conjugate.

\subsection sec_FS_Mult Multiplication Functions

\heading{Synopsis}

\code
#include <lal/FrequencySeries.h>

XLALMultiply<frequencyseriestype>()
\endcode

\heading{Description}

These functions multiply the first argument by the second argument,
returning a pointer to the first argument on success or NULL on failure.
The two series must have the same epoch and frequency resolution, and have
units that differ only by a dimensionless factor.

*/