#!/usr/bin/env python
#
# $Id$
#
# Copyright (C) 2006  Kipp C. Cannon
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.


#
# =============================================================================
#
#                                   Preamble
#
# =============================================================================
#


import os.path
import re
import sys
from optparse import OptionParser


from glue import lal


__author__ = "Kipp Cannon <kipp@gravity.phys.uwm.edu>"
__version__ = "$Revision$"[11:-2]
__date__ = "$Date$"[7:-2]


#
# =============================================================================
#
#                                 Command Line
#
# =============================================================================
#


def parse_command_line():
	parser = OptionParser(usage="usage: %prog [options]\n\nExample:\n\tls *.xml | %prog")
	parser.add_option("-i", "--input", metavar="INPUT", default="", help="read input from INPUT [stdin]")
	parser.add_option("-o", "--output", metavar="OUTPUT", default="", help="write output to OUTPUT [stdout]")
	parser.add_option("-v", "--verbose", action="store_true", dest="verbose", help="turn on verbosity")
	return parser.parse_args()[0]


#
# =============================================================================
#
#                                     Main
#
# =============================================================================
#


#
# Parse command line
#


options = parse_command_line()


#
# Open input and output streams
#


if options.input:
	input = file(options.input)
else:
	input = sys.stdin

if options.output:
	output = file(options.output)
else:
	output = sys.stdout

#
# Other initializations
#


path_count = 0
total_duration = 0


#
# Filter input one line at a time
#


for line in input:
	path, file = os.path.split(line.strip())
	cache_entry = lal.CacheEntry.from_T050017(file)
	#cache_entry.url = "file://localhost%s" % os.path.abspath(os.path.join(path, file)
	print >>output, str(cache_entry)
	path_count += 1
	total_duration += abs(cache_entry.segment)


if options.verbose:
	print >>sys.stderr, "number of paths: %d\ntotal duration: %s" % (path_count, str(total_duration))
