#!/usr/bin/python

# $Id$
__author__ = "Stephen Fairhurst <fairhurst_s@ligo.caltech.edu>"
__version__ = "$Revision$"[11:-2]
__date__ = "$Date$"[7:-2]

import sys
import copy
import os
from optparse import *
import glob

#############################################################################
def write_header(fname,search_name):
  fname.write("<%method title>" + search_name + " Upper Limit</%method>\n" + \
      "<%method headline>" + search_name + " Upper Limit</%method>\n" + \
      "<%method cvsid>$Id$</%method>\n" + \
      "\n" + \
      "<style type=\"text/css\">\n" + \
      "div.figure {\n" + \
      "  text-align: center;\n" + \
      "  width: 80%;\n" + \
      "  border: thin silver solid;\n" + \
      "  margin: 0.5em;\n" + \
      "  padding: 0.5em;\n" + \
      "}\n" + \
      "div.figure p {\n" + \
      "  text-align: center;\n" + \
      "  font-style: italic;\n" + \
      "  font-size: smaller;\n" + \
      "  text-indent: 0;\n" + \
      "}\n" + \
      "div.figure a {\n" + \
      "  text-decoration: none;\n" + \
      "  border-bottom: none;\n" + \
      "}\n" + \
      "img.full {\n" + \
      "  width : 100%;\n" + \
      "  border : 0;\n" + \
      "}\n" + \
      "  img.half {\n" + \
      "  width : 50%;\n" + \
      "  border : 0;\n" + \
      "}\n" + \
      "img.third {\n" + \
      "  width : 33%;\n" + \
      "  border : 0;\n" + \
      "}\n" + \
      "</style>\n" + \
      "\n")

#############################################################################
def write_toc(fname,dir):
  fname.write("<h2>Table of contents</h2>\n" + \
      "<a name=\"toc\"></a>\n" + \
      "<ol>\n" + \
      "<li><a href=\"" + dir + "/" + opts.output + "#config\">\n" + \
      "<strong>Configuration</strong></a>\n" + \
      "<li><a href=\"" + dir + "/" + opts.output + "#fgbg\">\n" + \
      "<strong>Foreground and Background</strong></a>\n" + \
      "<li><a href=\"" + dir + "/" + opts.output + "#eff\">\n" + \
      "<strong>Efficiencies</strong></a>\n" + \
      "<li><a href=\"" + dir + "/" + opts.output + "#lum\">\n" + \
      "<strong>Luminosities</strong></a>\n" + \
      "<li><a href=\"" + dir + "/" + opts.output + "#png\">\n" + \
      "<strong>Plotnumgalaxies Results</strong></a>\n" + \
      "<li><a href=\"" + dir + "/" + opts.output + "#ul\">\n" + \
      "<strong>Upper Limit Results</strong></a>\n" + \
      "</ol>")

#############################################################################
def write_config(fname,dir,ini):
  fname.write("<a name=\"config\"><h2>Configuration</h2></a>\n" + \
      "<p>The configuration is contained in the file <a href=\"" + \
      dir + "/" + ini + "\">" + ini + "</a>\n\n")


#############################################################################
def add_figure(fname,dir,fnames,size,caption):
  global fig_num
  fig_num +=1
  fname.write("<div class=\"figure\"> \n<p>")
  for fnam in fnames:
    fname.write("<a href=\"" + dir + "/" + fnam +"\">" + \
      "<img class=\"" + size + "\" src=\"" + dir + "/" + fnam + "\"></a>")
  fname.write("<p>Figure " + str(fig_num) + ":  " + caption + "\n</div>\n\n")


#############################################################################
def write_fgbg(fname,dir):
  fname.write("<a name=\"fgbg\"><h2>Foreground and Background</h2></a>\n\n")
 
  add_figure(fname,dir,fnames=["plotthinca/summary_plot_slide_trigs.png",\
      "plotthinca/summary_cum_hist_effective_snr.png"],size="half",\
      caption="foreground vs background distribution of triggers")
  
  png_dir = "plotnumgalaxies/" + opts.ifos[0] 
  add_figure(fname,dir,fnames=[png_dir + "/" + opts.ifos[0] + "_slide_pdf.png",\
      png_dir + "/" + opts.ifos[0] + "_slide_cumulative_dist.png"],\
      size="half",caption="distribution of loudest events")

#############################################################################
def write_efficiencies(fname,dir):
  fname.write("<a name=\"eff\"><h2>Efficiency Plots</h2></a>\n\n")

  for ifos in opts.ifos:
    fname.write("<h3>" + ifos + "</h3>")

    if "L" in ifos:
      plot_name = "plotnumgalaxies/" + ifos + "/" + ifos + "_" + \
          opts.x_value + "_" + opts.y_value
      add_figure(fname,dir,fnames=[plot_name + "_efficiency.png",\
          plot_name + "_mc_errors.png"],\
          size="half",caption="efficiency plot, and Monte Carlo errors")

    else:
      plot_name = "plotnumgalaxies/" + ifos + "/" + ifos + "_" + opts.x_value
      add_figure(fname,dir,fnames=[plot_name + "_efficiency.png"],\
          size="full",caption="efficiency plot")

      add_figure(fname,dir,fnames=[plot_name + "_hanford_calibration.png",\
        plot_name + "_monte_carlo.png",plot_name + "_waveform.png"],\
          size="third",caption="efficiency plots with systematic errors")

#############################################################################
def write_luminosities(fname,dir):
  fname.write("<a name=\"lum\"><h2>Luminosity Plots</h2></a>\n\n")

  for ifos in opts.ifos:

    if ifos=="H1H2L1":
      fname.write("<h3>Hanford - Livingston</h3>")
      plot_name = "plotnumgalaxies/" + ifos + "/" + ifos + "_" + \
          opts.x_value + "_" + opts.y_value
      add_figure(fname,dir,fnames=[plot_name + "_ng.png"],\
          size="full",caption="luminosity plot")
      add_figure(fname,dir,fnames=[plot_name + "_ng_dist_err.png",\
          plot_name + "_ng_mag_err.png"],\
          size="half",
          caption="luminosities, including systematic uncertainties")

    elif ifos=="H1H2":
      fname.write("<h3>Hanford</h3>")
      plot_name = "plotnumgalaxies/" + ifos + "/" + ifos + "_" + opts.x_value
      add_figure(fname,dir,fnames=[plot_name + "_ng_plot.png"],\
          size="full",caption="efficiency plot")

      add_figure(fname,dir,fnames=[plot_name + "_ng_plot_dist_err.png",\
        plot_name + "_ng_plot_mag_err.png"],\
          size="third",caption="luminosity plots, including systematics")

#############################################################################
def write_png_results(fname,dir):
  fname.write("<a name=\"png\"><h2>Search Results</h2></a>\n\n")

  for ifos in opts.ifos:
    fname.write("<h3>" + ifos + "</h3>\n")
    fname.write("<h4>Gaussian Distribution</h4>")

    fname.write("Plotnumgalaxies output:\n<pre>")
    tmp_file = file(opts.actual_directory + "/plotnumgalaxies/" + ifos + \
        "/png-output-" + ifos + ".log")
    fname.write(tmp_file.read())
    fname.write("</pre>")

    if ifos=="H1H2":
      plot_name = "plotnumgalaxies/" + ifos + "/" + ifos + "_"
      add_figure(fname,dir,fnames=[plot_name + opts.x_value + \
          "_ng_search_cum.png",plot_name + "ng_vs_stat_using_" + \
          opts.x_value + "_integral.png"],\
          size="half",caption="cumulative search luminosity")
    else:
      plot_name = "plotnumgalaxies/" + ifos + "/" + ifos + "_"
      add_figure(fname,dir,fnames=[plot_name + "ng_vs_stat_using_" + \
          opts.x_value + "_" + opts.y_value + "_integral.png"],\
          size="half",caption="cumulative search luminosity")

    fname.write("<h4>Uniform Distribution</h4>\n")
    fname.write("Plotnumgalaxies output:\n<pre>")
    tmp_file = file(opts.actual_directory + "/plotnumgalaxies/" + ifos + \
        "_uniform/png-output-" + ifos + ".log")
    fname.write(tmp_file.read())
    fname.write("</pre>")

#############################################################################
def write_ul_results(fname,dir):
  fname.write("<a name=\"ul\"><h2>Upper Limit Results</h2></a>\n\n")

  # gaussian
  fname.write("<h3>Gaussian Mass Distribution</h3>")

  fname.write("Compute Posterior output:\n<pre>")
  tmp_file = file(opts.actual_directory + "/plotnumgalaxies/" + \
      "ul-output-gaussian.log")
  fname.write(tmp_file.read())
  fname.write("</pre>")

  add_figure(fname,dir,fnames=["plotnumgalaxies/Gaussian-posterior-pdf.png", \
      "plotnumgalaxies/Gaussian-posterior-cdf.png"], \
      size="half",\
      caption="posterior and cumulative posterior for the rate")

  # uniform
  fname.write("<h3>Uniform Mass Distribution</h3>")

  fname.write("Compute Posterior output:\n<pre>")
  tmp_file = file(opts.actual_directory + "/plotnumgalaxies/" + \
      "ul-output-uniform.log")
  fname.write(tmp_file.read())
  fname.write("</pre>")

  add_figure(fname,dir,fnames=[ "plotnumgalaxies/Uniform-rate-v-mass.png"], \
      size="full", caption="rate upper limit vs total mass")

  uniFiles = glob.glob(opts.actual_directory + \
      "/plotnumgalaxies/Uniform-*-mtotal*pdf.png")
  for thisFile in uniFiles:
    # keep only the file name
    thisFile = thisFile.split("/")[-1]
    # get the mass range
    mlo = thisFile.split("-")[1]
    mhi = thisFile.split("-")[2]
    add_figure(fname,dir,fnames=["plotnumgalaxies/" + thisFile,\
        "plotnumgalaxies/" + thisFile.strip("pdf.png") + "cdf.png"],\
        size="third", \
        caption="posterior and cumulative posterior in mass range " + \
        mlo + " to " + mhi)

       

#############################################################################
usage =  """ %prog [options]
Program to write webpage from upperlimit.py
"""

parser = OptionParser( usage = usage, version = "%prog CVS $Id$" )

parser.add_option("-C","--config-file",action="store",type="string",\
    default='', metavar=" INI File",\
    help="ini file with information about run directories" )

parser.add_option("-W","--web-directory",action="store",type="string",\
    default=None, metavar=" WEB Dir",\
    help="directory containing the upperlimit output, as seen from web")

parser.add_option("-A","--actual-directory",action="store",type="string",\
    default=None, metavar=" ACTUAL Dir",\
    help="path to directory containing the upperlimit output")

parser.add_option("-S","--search-name",action="store",type="string",\
    default=None, metavar="SEARCH",\
    help="name of the search")

parser.add_option("-O","--output",action="store",type="string",\
    default="upperlimit.html", metavar="OUTPUT",\
    help="output file name (default = upperlimit.html)")

parser.add_option("-i","--ifos",action="append",type="string",\
    metavar="IFOS",help="data analyzed when these ifos were on")

parser.add_option("-X","--x-value",action="store",type="string",\
    default ="eff_dist_h",\
    help="Assigns x axis parameter for plot contour, (default eff_dist_h)")

parser.add_option("-Y","--y-value",action="store",type="string",\
    default ='mchirp',\
    help="Assigns the parameter to x axis to plot contour, (default mchirp)")

(opts,args) = parser.parse_args()

#############################################################################
fig_num = 0
html_file = file(opts.output,"w")


write_header(html_file,opts.search_name)
write_toc(html_file,opts.web_directory)
write_config(html_file,opts.web_directory,opts.config_file)
write_fgbg(html_file,opts.web_directory)
write_efficiencies(html_file,opts.web_directory)
write_luminosities(html_file,opts.web_directory)
write_png_results(html_file,opts.web_directory)
write_ul_results(html_file,opts.web_directory)

html_file.close()
