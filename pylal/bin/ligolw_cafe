#!/usr/bin/python
#
# $Id$
#
# Copyright (C) 2006  Kipp C. Cannon
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

#
# =============================================================================
#
#                                   Preamble
#
# =============================================================================
#

"""
LIGO Light-Weight XML Coincidence Analysis Front End.
"""

from optparse import OptionParser
import sys

from pylal import ligolw_cafe

__author__ = "Kipp Cannon <kipp@gravity.phys.uwm.edu>"
__date__ = "$Date$"[7:-2]
__version__ = "$Revision$"[11:-2]


#
# =============================================================================
#
#                                 Command Line
#
# =============================================================================
#

def parse_command_line():
	parser = OptionParser(version = "%prog CVS $Id$")
	parser.add_option("-s", "--single-instrument", action = "store_true", help = "select single instrument mode")
	parser.add_option("-t", "--time-slides", metavar = "filename", help = "read the time slide table from the given file")
	parser.add_option("-v", "--verbose", action = "store_true", help = "be verbose")
	parser.add_option("-b", "--base", metavar = "base", default = "cafe_", help = "set base for output caches")
	options, cachenames = parser.parse_args()

	if not options.time_slides:
		raise ValueError, "--time-slides required"

	return options, (cachenames or [None])


#
# =============================================================================
#
#                                     Main
#
# =============================================================================
#

options, cachenames = parse_command_line()

cache = []
map(lambda filename: cache.extend(ligolw_cafe.load_cache(filename, options.verbose)), cachenames)

options.time_slides = ligolw_cafe.get_time_slides(options.time_slides, options.verbose)

instruments, outputcaches = ligolw_cafe.ligolw_cafe(cache, options.time_slides, options.verbose)

if options.single_instrument:
	ligolw_cafe.write_single_instrument_caches(options.base, outputcaches, instruments, options.verbose)
else:
	ligolw_cafe.write_caches(options.base, outputcaches, instruments, options.verbose)
