#!/usr/bin/python
#
# $Id$
#
# Copyright (C) 2006  Kipp C. Cannon
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

#
# =============================================================================
#
#                                   Preamble
#
# =============================================================================
#

from optparse import OptionParser
import sys

from glue.ligolw import ligolw
from glue.ligolw import lsctables
from pylal import llwapp
from pylal.ligolw_tisi import ligolw_tisi

__author__ = "Kipp Cannon <kipp@gravity.phys.uwm.edu>"
__version__ = "$Revision$"[11:-2]
__date__ = "$Date$"[7:-2]


#
# =============================================================================
#
#                                 Command Line
#
# =============================================================================
#

def parse_command_line():
	parser = OptionParser(version = "%prog CVS $Id$")
	parser.add_option("--comment", metavar = "text", default = "", help = "set comment string in process table")
	parser.add_option("-o", "--output", metavar = "filename", help = "write to filename (default = stdout)")
	parser.add_option("-v", "--verbose", action = "store_true", help = "be verbose")
	parser.add_option("-i", "--instrument", metavar = "name=first:last:step[,first:last:step[,...]]", action = "append", default = [], help = "construct time slides containing the named instrument, shifted by numbers seconds as described by the given range(s)")
	options, filenames = parser.parse_args()

	return options, (filenames or [None])


#
# =============================================================================
#
#                                 Preparation
#
# =============================================================================
#

def new_doc():
	doc = ligolw.Document()
	doc.appendChild(ligolw.LIGO_LW())
	proctable = lsctables.New(lsctables.ProcessTable)
	doc.childNodes[0].appendChild(proctable)
	procparamtable = lsctables.New(lsctables.ProcessParamsTable)
	doc.childNodes[0].appendChild(procparamtable)
	timeslidetable = lsctables.New(lsctables.TimeSlideTable)
	doc.childNodes[0].appendChild(timeslidetable)

	return doc


#
# =============================================================================
#
#                                     Main
#
# =============================================================================
#

options, filenames = parse_command_line()
try:
	doc = ligolw_tisi(new_doc(), **options.__dict__)
	for filename in filenames:
		llwapp.write_filename(doc, filename, options.verbose)
except Exception, e:
	print >>sys.stderr, "error: %s" % str(e)
	sys.exit(1)
