#!/usr/bin/env python

import sys
import os
import re
import exceptions
import time
from types import *
from optparse import OptionParser

from matplotlib.patches import Patch
from pylab import *
from pylal import readMeta
from pylal import viz


# grab command line options
parser = OptionParser(version="%prog CVS $Id$")
parser.add_option("-s", "--gps-start-time", metavar="SECONDS", default=None, help="start from GPS time SECONDS")
parser.add_option("-d", "--duration", metavar="SECONDS", default=None, help="duration")
options, args = parser.parse_args()
del parser

if options.gps_start_time:
	options.gps_start_time = int(options.gps_start_time)
if options.duration:
	options.duration = int(options.duration)

# interpret the remaining command line arguments as trigger file names
triggers = readMeta.metaDataTable(args, "sngl_burst")

# extract some arrays from the trigger table
start_time = triggers.mkarray("start_time")
duration = triggers.mkarray("duration")
confidence = triggers.mkarray("confidence")
central_freq = triggers.mkarray("central_freq")
bandwidth = triggers.mkarray("bandwidth")
lo_freq = central_freq - 0.5 * bandwidth

# set the start time for the plot
if options.gps_start_time == None:
	options.gps_start_time = int(min(start_time))
start_time -= options.gps_start_time
if options.duration == None:
	options.duration = int(max(start_time))

fig = figure()
fig.set_figsize_inches(8.5, 11)

subplot(221)
semilogy(start_time, -confidence, "b+")
xlabel("Start Time (s)")
ylabel("|Confidence|")
title("Start Time " + str(options.gps_start_time))
grid(True)

subplot(222)
semilogy(central_freq, -confidence, 'b+')
xlabel("Central Frequency (Hz)")
ylabel("|Confidence|")
grid(True)
#axis([0, 2200, 0, 1000])

subplot(223)
viz.tfplot(start_time, duration, lo_freq, bandwidth, log(-confidence))
#set(p, 'alpha', 0.75)
grid(True)
#axis([0, options.duration, 0, 1000])
#colorbar()

subplot(224)
hist(central_freq, 64)
xlabel("Central Frequency (Hz)")
ylabel("Count")
grid(True)
#axis([min(central_freq), max(central_freq), 0, 1000])

#savefig('epfill.png')
show()
