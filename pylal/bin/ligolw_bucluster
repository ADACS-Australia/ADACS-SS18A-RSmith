#!/usr/bin/python
#
# $Id$
#
# Copyright (C) 2006  Kipp C. Cannon
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

#
# =============================================================================
#
#                                   Preamble
#
# =============================================================================
#

from optparse import OptionParser
import sys

from pylal import llwapp
from pylal import SnglBurstUtils
from pylal import ligolw_bucluster

__author__ = "Kipp Cannon <kipp@gravity.phys.uwm.edu>"
__version__ = "$Revision$"[11:-2]
__date__ = "$Date$"[7:-2]


#
# =============================================================================
#
#                                 Command Line
#
# =============================================================================
#

def parse_command_line():
	parser = OptionParser(version = "%prog CVS $Id$")
	parser.add_option("--comment", metavar = "text", default = "", help = "set comment string in process table")
	parser.add_option("-i", "--input", metavar = "filename", help = "read from filename (default = stdin)")
	parser.add_option("-o", "--output", metavar = "filename", help = "write to filename (default = stdout)")
	parser.add_option("-m", "--cluster", metavar = "[bypeaktimeandfreq|bytimeandfreq]", help = "set clustering method (required)")
	parser.add_option("-v", "--verbose", action = "store_true", help = "be verbose")
	options = parser.parse_args()[0]

	if options.cluster == None:
		raise Exception, "missing required command line argument --cluster"
	if options.cluster == "bypeaktimeandfreq":
		options.testfunc = SnglBurstUtils.CompareSnglBurstByPeakTimeAndFreq
		options.clusterfunc = ligolw_bucluster.SnglBurstCluster
		options.bailoutfunc = SnglBurstUtils.CompareSnglBurstByPeakTime
	elif options.cluster == "bytimeandfreq":
		options.testfunc = SnglBurstUtils.CompareSnglBurst
		options.clusterfunc = ligolw_bucluster.SnglBurstCluster
		options.bailoutfunc = None
	else:
		raise Exception, "unrecognized cluster method %s" % options.cluster

	return options


#
# =============================================================================
#
#                                     Main
#
# =============================================================================
#

try:
	options = parse_command_line()
	doc = llwapp.load_filename(options.input, options.verbose)
	doc = ligolw_bucluster.ligolw_bucluster(doc, **options.__dict__)
	llwapp.write_filename(doc, options.output, options.verbose)
except Exception, e:
	print >>sys.stderr, "error: %s" % str(e)
	sys.exit(1)
