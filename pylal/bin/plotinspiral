#!/usr/bin/env python

import sys
import os
import getopt
import re
import exceptions
import glob
from types import *

from pylab import *
from lgen import readMeta


# grab command line options
shortop = "vg:s:d:h"
longop = [
  "version",
  "input=",
  "gps-start-time=",
  "duration=",
  "help" ]

try:
  opts, args = getopt.getopt(sys.argv[1:], shortop, longop)
except getopt.GetoptError:
  print >>sys.stderr, "Error parsing command line"
  print >>sys.stderr, "Enter 'plotburst --help' for usage"
  sys.exit(1)

# defaul values
myGlob = None
myEpoch = None
myDuration = 100

for o, a in opts:
  if o in ("-h", "--help"):
    sys.exit(0)
  elif o in ("-v", "--version"):
    sys.exit(0)
  elif o in ("-g", "--glob"):
    myGlob = a
  elif o in ("-s", "--gps-start-time"):
    myEpoch = float(a)
  elif o in ("-d", "--duration"):
    myDuration = float(a)

if not myGlob:
  print >>sys.stderr, "Bad combination or missing options"
  print >>sys.stderr, "Enter 'plotburst --help' for usage"
  sys.exit(1)

# glob the list of files to read in
myfiles = glob.glob(myGlob);

# an instance of the snglInspiralTable
inspTriggers=readMeta.snglInspiralTable()

# read in the triggers
inspTriggers.readfiles(myfiles)

# use the supplied method to convert these columns into numarrays
time = inspTriggers.mkarray("end_time")
snr = inspTriggers.mkarray("snr")
  
# set the start time for the plot
if not myEpoch: 
  myEpoch = time[0,]

print myEpoch

plot(time - myEpoch, snr, "ro")
xlabel(r'Time (seconds since %s)' % myEpoch, size='x-large')
ylabel(r'SNR', size='x-large')
title(r'Sample of Time v SNR Plot')
grid(True)
savefig('inspiral-sample.png')
show()
