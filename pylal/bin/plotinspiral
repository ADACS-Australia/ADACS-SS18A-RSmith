#!/usr/bin/python

import sys
import os
from optparse import *
import re
import exceptions
import glob
from types import *

from pylab import *
from pylal import readMeta
from pylal import viz

##############################################################################
usage = """usage: %prog [options] file1 (file2 file3)

Inspiral Plotting Functions

The plots are

    1.  SNR v CHISQ
    2.  Cumulative Histogram of SNR values
    3.  Histogram of CHISQ values

Example 1: ...
Example 2: ...
"""

parser = OptionParser( usage )
parser.add_option("-v","--version",action="store_true",default=False,\
    help="display version information " )
parser.add_option("-f","--figure-name",action="store",type="string",\
    default=None,metavar=" FNAME",\
    help="generate png figures with name FNAME-fig.png")
parser.add_option("-t","--title",action="store",type="string",default=None,\
    metavar=" STRING",help="title string for plots")
parser.add_option("-s","--show-plot",action="store_true",default=False,\
    help="display the figures on the terminal" )
parser.add_option("-a","--snr-chisq",action="store_true",default=False,\
    help="make a plot of snr vs chisq" )
parser.add_option("-b","--log-snr-chisq",action="store_true",default=False,\
    help="make a log plot of snr vs chisq" )
parser.add_option("-C","--chisq-threshold",action="store",type="float",\
    help="specify the chisq threshold (so we can add to plot)" )
parser.add_option("-D","--chisq-delta",action="store",type="float",\
    help="specify the delta param for the chisq " )
parser.add_option("-B","--chisq-bins",action="store",type="int",\
    help="specify the number of chisq bins")
parser.add_option("-c","--cum-hist-snr",action="store_true",default=False,\
    help="cumulative histogram of the snr" )
parser.add_option("-d","--hist-snr",action="store_true",default=False,\
    help="histogram of the snr" )
parser.add_option("-e","--norm-hist-snr",action="store_true",default=False,\
    help="normalized cumulative histogram of the snr" )
parser.add_option("-g","--hist-chisq",action="store_true",default=False,\
    help="histogram of the chisq values" )
parser.add_option("-n","--nbins",action="store",type="int",default=10,\
    metavar=" NBINS", help="number of bins for the histogram plots" )
parser.add_option("-m","--maximization-interval",action="store",\
    type="int",default=10,\
    metavar=" MAX_INT", help="maximization interval used (in ms)" )
parser.add_option("-T","--analyzed-time",action="store",type="int",\
    metavar=" SECONDS", help="amount of time analyzed" )

(opts,args) = parser.parse_args()

# if --version flagged
if opts.version:
  sys.exit(0)

# check at least one trig file was specified
if not args:
  print >>sys.stderr, "at least one trigger file must be specified"
  print >>sys.stderr, "Enter 'plotinspiral --help' for usage"
  sys.exit(1)

if opts.norm_hist_snr and not opts.analyzed_time:
  print >>sys.stderr, "to make the normalized cumulative histogram"
  print >>sys.stderr, "the --analyzed-time must be specified"
  sys.exit(1)

trigFiles = args

# an instance of the snglInspiralTable
inspTriggers=readMeta.metaDataTable(trigFiles, "sngl_inspiral")
plotsymbols= ['r+','bx','ko']

snr_range = arange( int(min(inspTriggers.mkarray('snr'))), \
  int(max(inspTriggers.mkarray('snr'))) )

if opts.chisq_threshold:
  if not ( opts.chisq_bins and opts.chisq_delta):
    print >>sys.stderr, "when --chisq-threshold is specified, must also give"
    print >>sys.stderr, "the --chisq-bins and --chisq-delta"
    sys.exit(1)
  
  chisq_thresh = opts.chisq_threshold * ( opts.chisq_bins + \
    opts.chisq_delta * snr_range * snr_range )
  
###################################
# plot of snr vs chisq
if opts.snr_chisq:
  figure(1)
  if opts.chisq_threshold:
    plot(snr_range, chisq_thresh)
    hold(True)
    
  viz.plot_a_v_b(inspTriggers,'snr','chisq','linear','kx',opts.figure_name)

###################################
# plot of snr vs chisq
if opts.log_snr_chisq:
  figure(2)
  if opts.chisq_threshold:
    loglog(snr_range, chisq_thresh)
    hold(True)
    
  viz.plot_a_v_b(inspTriggers,'snr','chisq','loglog','kx',opts.figure_name)


###################################
# cumulative histogram of snr
if opts.cum_hist_snr:
  figure(3)
  viz.cumhistcol(inspTriggers,'snr',None,opts.figure_name)

###################################
# histogram of snr
if opts.hist_snr:
  figure(4)
  viz.histcol(inspTriggers,'snr',opts.nbins,opts.figure_name)

###################################
# histogram of snr
if opts.norm_hist_snr:
  max_poss_trigs = (1000 / float (opts.maximization_interval)) * \
    opts.analyzed_time
  figure(5)
  viz.cumhistcol(inspTriggers,'snr',max_poss_trigs,opts.figure_name)
  
###################################
# histogram of chisq values
if opts.hist_chisq:
  figure(5)
  viz.histcol(inspTriggers,'chisq',opts.nbins,opts.figure_name)


if opts.show_plot:
  show()
