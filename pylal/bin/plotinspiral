#!/usr/bin/env python

import sys
import os
import getopt
import re
import exceptions
from types import *

from matplotlib.patches import Patch
from pylab import *
from lgen import readMeta


# grab command line options
shortop = "vi:s:d:h"
longop = [
  "version",
  "input=",
  "gps-start-time=",
  "duration=",
  "help" ]

try:
  opts, args = getopt.getopt(sys.argv[1:], shortop, longop)
except getopt.GetoptError:
  print >>sys.stderr, "Error parsing command line"
  print >>sys.stderr, "Enter 'plotburst --help' for usage"
  sys.exit(1)

# defaul values
inputFilename = None
myEpoch = None
myDuration = 100

for o, a in opts:
  if o in ("-h", "--help"):
    sys.exit(0)
  elif o in ("-v", "--version"):
    sys.exit(0)
  elif o in ("-i", "--input"):
    inputFilename = a
  elif o in ("-s", "--gps-start-time"):
    myEpoch = float(a)
  elif o in ("-d", "--duration"):
    myDuration = float(a)

if not inputFilename:
  print >>sys.stderr, "Bad combination or missing options"
  print >>sys.stderr, "Enter 'plotburst --help' for usage"
  sys.exit(1)

# read in the data from the input file
inspTriggers=readMeta.SnglInspiralTable(inputFilename)

# set the start time for the plot
if not myEpoch: 
  myEpoch = inspTriggers.end_time[0,]
  

#print(inspTriggers.snr)
inspTriggers.summary()
#xlabel(r'Time (seconds since %s)' % myEpoch, size='x-large')
#ylabel(r'Frequency (Hz)', size='x-large')
#title(r'Excess power trigger')
#grid(True)
#colorbar()
#axis([0,myDuration,0,1000])
savefig('epfill.png')
show()
