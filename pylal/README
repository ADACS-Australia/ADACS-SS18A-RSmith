PyLAL: Python LAL.

PyLAL is a collection of utilities for plotting the output files from
LSC analysis pipelines.

This README file explains how to build and install PyLAL.

------------------------------------------------------------------------------

0. Prerequisites

PyLAL needs matplotlib and numpy to provide plotting and good scientific
data manipulation.  The LIGO lightweight reading stuff requires LAL,
Metaio and Python.  Plotting also requires a latex distribution
(tetex is standard on many platforms). These packages should be
available at

  http://www.lsc-group.phys.uwm.edu/daswg/download/repositories.html

Note: matplotlib and numpy are now part of the standard LSCSOFT stack
(at least for FC4) and can be obtained using:

  yum groupinstall "LSCSOFT"

However, there is a small bug in the matplotlib rpm which can be fixed
by finding the .matplotlibrc file by typing:

  locate .matplotlibrc

then opening the file and replacing the line
   "numerix      : Numeric"
by "numerix      : numpy"

------------------------------------------------------------------------------

1. Determine your Python version

Python version 2.4 or greater is required to install PyLAL. Type:

  python -V

to determine the version of python installed on your machine. For
example:

  nvf@dirac:~$ python -V
  Python 2.4.4

If you do not have version 2.4 or greater installed, contact your system
administrator for help installing Python.

Set the environment variable PYTHON to be the name of your python
version 2 executable. For example if your executable is named python,
bash or sh users should type:

  export PYTHON=python

and csh users should type:

  setenv PYTHON python

If your executable is named python2, bash or sh users should type:

  export PYTHON=python2

and csh users should type:

  setenv PYTHON python2


------------------------------------------------------------------------------

2. Get PyLAL from Git

PyLAL is part of the LALSuite Git repository. First choose a directory
in which to install the PyLAL sources. In this example, we install the
sources into ${HOME}/src. If you decide to install somewhere else,
change ${HOME}/src to the directory you have chosen. Change
albert.einstein in the git clone below to your ligo.org kerberos
principle, if you have one. Type:

  mkdir -p ${HOME}/src
  cd ${HOME}/src
  git clone git+ssh://albert.einstein@ligo-vcs.phys.uwm.edu/usr/local/git/lalsuite.git

If you do not have a ligo.org kerberos principle you can get the source
code anonymously using:

  git clone git://ligo-vcs.phys.uwm.edu/lalsuite.git

This will create a directory ${HOME}/src/lalsuite containing the
LALSuite sources.


------------------------------------------------------------------------------

3. Build and Install PyLAL

Choose a location in which to install PyLAL. In this example we choose
/opt/pylal. You must have write access to this directory, so you may
wish to install in ${HOME}, for example. Set the environment variable
${PYLAL_LOCATION} to point to your chosen install directory. Bash or sh
users should type:

  export PYLAL_LOCATION=/opt/pylal

and csh users should type:

  setenv PYLAL_LOCATION /opt/pylal

Assuming you have installed the pylal sources in
${HOME}/src/lalsuite/pylal, type:

  cd ${HOME}/src/lalsuite/pylal

Then type:

  ${PYTHON} setup.py install --prefix=${PYLAL_LOCATION}

This will build and install all the PyLAL modules and programs.


------------------------------------------------------------------------------

4. Set up your Environment for Using PyLAL

If you are a bash or sh user, edit your .profile (or .bash_profile)
file and add the lines (changing /opt/pylal to wherever you installed
PyLAL):

  export PYLAL_LOCATION=/opt/pylal
  if [ -f ${PYLAL_LOCATION}/etc/pylal-user-env.sh ] ; then
    source ${PYLAL_LOCATION}/etc/pylal-user-env.sh
  fi

If you are a csh user, edit your .login file and add the lines (changing
/opt/pylal to wherever you installed PyLAL):

  setenv PYLAL_LOCATION /opt/pylal
  if ( -f ${PYLAL_LOCATION}/etc/pylal-user-env.csh ) then
    source ${PYLAL_LOCATION}/etc/pylal-user-env.csh
  endif

Now log out and log back in to ensure that all environment variables
have been updated.

You may now use PyLAL! Please report any problems via the Gnats
database linked from the PyLAL home page.
