SUFFIXES = .py

.PHONY: pymodule-all-local
.PHONY: pymodule-mostlyclean-local
.PHONY: pybin-install-data-hook
.PHONY: pybin-uninstall-local
.PHONY: pybin-dist-hook

if HAVE_PYTHON

pybindir = $(bindir)
lalsuite_python_wrapper = $(top_srcdir)/gnuscripts/lalsuite_python_wrapper.in

BUILT_SOURCES += $(pymodule_PYTHON) $(pybin_SCRIPTS)
MOSTLYCLEANFILES += .python_wrapper $(pybin_SCRIPTS)
EXTRA_DIST += $(lalsuite_python_wrapper)

all-local: pymodule-all-local
pymodule-all-local: pymodule-mostlyclean-local
	$(AM_V_at)if test "x$(builddir)" != "x$(srcdir)"; then \
		for file in $(pymodule_PYTHON); do \
			if test -r "$(srcdir)/$${file}"; then \
				$(LN_S) "$(srcdir)/$${file}" "$(builddir)/$${file}" || exit 1; \
			fi; \
		done; \
	fi

mostlyclean-local: pymodule-mostlyclean-local
pymodule-mostlyclean-local:
	$(AM_V_at)if test "x$(builddir)" != "x$(srcdir)"; then \
		for file in $(pymodule_PYTHON); do \
			if test -r "$(srcdir)/$${file}"; then \
				rm -f "$(builddir)/$${file}" "$(builddir)/$${file}c" "$(builddir)/$${file}o" || exit 1; \
			fi; \
		done; \
	fi

.python_wrapper: $(lalsuite_python_wrapper)
	$(AM_V_at)if $(SED) 's|[@]PYTHON[@]|$(PYTHON)|g;s|[@]lalsuite_pythonpath[@]|$(abs_builddir):$(abs_srcdir):$(LAL_PYTHON_PATH)|g' $< > $@; then \
		chmod +x $@ || exit 1; \
		exit 0; \
	else \
		rm -f $@; \
		exit 1; \
	fi

$(pybin_SCRIPTS): Makefile .python_wrapper
.py:
	$(AM_V_GEN)if test -x $<; then \
		printf "\nERROR: $< must not be executable\n\n" >&2; \
		exit 1; \
	fi; \
	rm -f $@ $@.tmp || exit 1; \
	echo "#!$(abs_builddir)/.python_wrapper" > $@.tmp; \
	cat $< >> $@.tmp || exit 1; \
	chmod +x $@.tmp || exit 1; \
	mv -f $@.tmp $@

install-data-hook: pybin-install-data-hook
pybin-install-data-hook:
	$(AM_V_at)if test "x$(pybin_SCRIPTS)" != x; then \
		if test "x$(prefix)" = "x$(python_exec_prefix)"; then \
			python_wrapper="$(PYTHON)"; \
		else \
			python_wrapper="$(pkgdatadir)/python_wrapper"; \
			if test ! -x "$${python_wrapper}"; then \
				echo " $(MKDIR_P) $(DESTDIR)$(pkgdatadir)"; \
				$(MKDIR_P) $(DESTDIR)$(pkgdatadir) || exit 1; \
				echo "Generating $(DESTDIR)$${python_wrapper}..."; \
				sed_regex='s|[@]PYTHON[@]|$(PYTHON)|g;s|[@]lalsuite_pythonpath[@]|$(pyexecdir):$(pythondir)|g'; \
				if $(SED) "$${sed_regex}" $(lalsuite_python_wrapper) > $(DESTDIR)$${python_wrapper}; then \
					chmod 0755 $(DESTDIR)$${python_wrapper} || exit 1; \
				else \
					rm -f $(DESTDIR)$${python_wrapper}; \
					printf "\nERROR: failed to generate $(DESTDIR)$${python_wrapper}\n\n" >&2; \
					exit 1; \
				fi; \
			fi; \
		fi; \
		echo "Fixing shebangs commands in $(DESTDIR)$(pybindir)..."; \
		for file in $(pybin_SCRIPTS); do \
			printf " $${file}"; \
			if $(SED) -i "s|^#!.*$$|#!$${python_wrapper}|" "$(DESTDIR)$(pybindir)/$${file}"; then : ; else \
				printf "\n\nERROR: failed to fix shebang command of $(DESTDIR)$(pybindir)/$${file}\n\n" >&2; \
				exit 1; \
			fi; \
		done; \
		printf "\n"; \
	fi

uninstall-local: pybin-uninstall-local
pybin-uninstall-local:
	-rm -f "$(DESTDIR)$(pkgdatadir)/python_wrapper"

dist-hook: pybin-dist-hook
pybin-dist-hook:
	for file in $(pybin_SCRIPTS); do \
		cp "$(srcdir)/$${file}.py" "$(distdir)"; \
	done

else # !HAVE_PYTHON

pkgpython_PYTHON =
pymoduledir =
pymodule_PYTHON =
pybindir =
pybin_SCRIPTS =

endif # HAVE_PYTHON
