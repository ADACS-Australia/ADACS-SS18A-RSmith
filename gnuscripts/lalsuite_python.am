SUFFIXES = .py

.PHONY: pymodule-all-local
.PHONY: pymodule-mostlyclean-local
.PHONY: pybin-clean-local
.PHONY: pybin-dist-hook

if HAVE_PYTHON

pybindir = $(bindir)

BUILT_SOURCES += $(pymodule_PYTHON) $(pybin_SCRIPTS)
MOSTLYCLEANFILES += $(pybin_SCRIPTS)

python_install_script = $(top_srcdir)/gnuscripts/lalsuite_python_install_script
INSTALL_SCRIPT = $(python_install_script) $(INSTALL)
EXTRA_DIST += $(python_install_script)

all-local: pymodule-all-local
pymodule-all-local: pymodule-mostlyclean-local
	$(AM_V_at)if test "x$(builddir)" != "x$(srcdir)"; then \
		for file in $(pymodule_PYTHON); do \
			if test -r "$(srcdir)/$${file}"; then \
				$(LN_S) "$(srcdir)/$${file}" "$(builddir)/$${file}" || exit 1; \
			fi; \
		done; \
	fi

mostlyclean-local: pymodule-mostlyclean-local
pymodule-mostlyclean-local:
	$(AM_V_at)if test "x$(builddir)" != "x$(srcdir)"; then \
		for file in $(pymodule_PYTHON); do \
			if test -r "$(srcdir)/$${file}"; then \
				rm -f "$(builddir)/$${file}" "$(builddir)/$${file}c" "$(builddir)/$${file}o" || exit 1; \
			fi; \
		done; \
	fi

$(pybin_SCRIPTS): Makefile
.py:
	$(AM_V_GEN)if test -x $<; then \
		echo "" >&2; \
		echo "ERROR: $< must not be executable" >&2; \
		echo "" >&2; \
		exit 1; \
	fi; \
	$(MKDIR_P) .pybin/ || exit 1; \
	rm -f $@ $@.tmp .pybin/$@ || exit 1; \
	echo "#!/bin/sh" > $@.tmp; \
	echo "### SHELL SELF-EXECUTING HEADER SCRIPT" >> $@.tmp; \
	echo "''':'" >> $@.tmp; \
	echo "PYTHONPATH=\"$(abs_builddir):$(abs_srcdir):$(LAL_PYTHON_PATH):\$${PYTHONPATH}\"" >> $@.tmp; \
	echo "export PYTHONPATH" >> $@.tmp; \
	echo "exec $(PYTHON) \"\$$0\" \"\$$@\"" >> $@.tmp; \
	echo "exit \$$?" >> $@.tmp; \
	echo "fi" >> $@.tmp; \
	echo "'''" >> $@.tmp; \
	echo "### PYTHON SCRIPT" >> $@.tmp; \
	$(SED) -e "s|^PYTHONPATH=.*|PYTHONPATH=\"$(pyexecdir):$(pythondir):\$${PYTHONPATH}\"|" $@.tmp > .pybin/$@ || exit 1; \
	cat $< >> .pybin/$@ || exit 1; \
	cat $< >> $@.tmp || exit 1; \
	chmod +x $@.tmp || exit 1; \
	mv -f $@.tmp $@

clean-local: pybin-clean-local
pybin-clean-local:
	-rm -rf .pybin/

dist-hook: pybin-dist-hook
pybin-dist-hook:
	for file in $(pybin_SCRIPTS); do \
		cp "$(srcdir)/$${file}.py" "$(distdir)"; \
	done

else # !HAVE_PYTHON

pkgpython_PYTHON =
pymoduledir =
pymodule_PYTHON =
pybindir =
pybin_SCRIPTS =

endif # HAVE_PYTHON
