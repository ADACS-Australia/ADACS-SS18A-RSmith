# Common SWIG build rules
# Author: Karl Wette, 2011--2014

include $(top_srcdir)/gnuscripts/lallibs_header_links.am

.PHONY: force-swig-preproc-generation
.PHONY: run-octave
.PHONY: run-python
.PHONY: swig-distclean-generate-local
.PHONY: swig-octave-all-local
.PHONY: swig-octave-install-hook
.PHONY: swig-octave-uninstall-hook
.PHONY: swig-python-all-local
.PHONY: swig-python-install-hook
.PHONY: swig-python-uninstall-hook

swig_iface = swig_$(PACKAGE).i
swig_preproc_flags = $(swig_flags) -xml -xmllite
swig_flags = -Wextra -Werror -MP -MD -I$(top_builddir)/include $(SWIG_CPPFLAGS) $(LAL_SYSTEM_INCLUDES)
swig_cppflags = -shared -I$(top_builddir)/include $(SWIG_CPPFLAGS)
swig_ldflags = -module -avoid-version -version-info 0:0:0 $(SWIG_LDFLAGS)
swig_libtoolflags = --tag=disable-static
swig_deps_filter = $(SED) -e '/^  *swig_[a-z0-9][a-z0-9]*\.[a-z0-9][a-z0-9]*  *\\$$/d'
swig_octave_flags = $(swig_flags) -octave -outdir octave/ -globals $(PACKAGE)cvar -DSWIG_CPLUSPLUS_CAST
swig_octave_sources = swig_octave.cpp
swig_octave_test = $(swig_test_runner) OCTAVE_PATH '$(abs_builddir)/octave:$(abs_srcdir)/octave:$(LAL_OCTAVE_PATH)'
swig_python_flags = $(swig_flags) -python -outdir python/ -O -builtin -globals cvar
swig_python_pysource = python/$(PACKAGE).py
swig_python_sources = swig_python.c
swig_python_test = $(swig_test_runner) PYTHONPATH '$(abs_builddir)/python:$(abs_srcdir)/python:$(LAL_PYTHON_PATH)'
swig_test_runner = $(SHELL) $(srcdir)/run_swig_tests.sh '$(LIBTOOL)' '$(swig_module_lal_libs)'

BUILT_SOURCES =
CLEANFILES =
EXTRA_HEADERS =
TESTS =
nodist_pkginclude_HEADERS =

TEST_EXTENSIONS = .m .py

pkginclude_HEADERS = \
	SWIG$(PACKAGE_NAME)Alpha.i \
	SWIG$(PACKAGE_NAME)Omega.i \
	SWIG$(PACKAGE_NAME)Test.h \
	$(END_OF_LIST)

EXTRA_DIST = \
	generate_swig_iface.py \
	run_swig_tests.sh \
	$(TESTS)

if SWIG_BUILD

BUILT_SOURCES += \
	swig_config.h \
	$(END_OF_LIST)

swig_config.h: $(CONFIG_HEADER)
	$(AM_V_GEN)echo '// $@: generated from $< by $(subdir)/Makefile' >$@; \
	$(SED) -n 's/^#define  */#define SWIGLAL_/p' $< >>$@

CLEANFILES += \
	swig_config.h \
	$(END_OF_LIST)

if SWIG_BUILD_OCTAVE

@SWIG_include_deps@/swig_octave.deps

octexec_LTLIBRARIES = octave/swiglal.la
nodist_octave_swiglal_la_SOURCES = $(swig_octave_sources)
octave_swiglal_la_CPPFLAGS = $(swig_cppflags) $(SWIG_OCTAVE_CPPFLAGS)
octave_swiglal_la_CXXFLAGS = $(SWIG_OCTAVE_CXXFLAGS)
octave_swiglal_la_LDFLAGS = $(swig_ldflags) $(SWIG_OCTAVE_LDFLAGS)
octave_swiglal_la_LIBADD = $(swig_module_lal_libs)
octave_swiglal_la_LIBTOOLFLAGS = $(swig_libtoolflags)

all-local: swig-octave-all-local
swig-octave-all-local: octave/$(am__dirstamp)
	$(AM_V_at)cd octave/ && rm -f $(PACKAGE).oct && $(LN_S) $(SWIG_LTLIBDIR)/swiglal$(SWIG_SOEXT) $(PACKAGE).oct

install-exec-hook: swig-octave-install-hook
swig-octave-install-hook:
	cd $(DESTDIR)$(octexecdir) && rm -f swiglal.la $(PACKAGE).oct* && mv -f swiglal$(SWIG_SOEXT) $(PACKAGE).oct

uninstall-hook: swig-octave-uninstall-hook
swig-octave-uninstall-hook:
	cd $(DESTDIR)$(octexecdir) && rm -f $(PACKAGE).oct

TESTS += SWIGTest$(PACKAGE_NAME)Octave.m
M_LOG_COMPILER = $(swig_octave_test) $(OCTAVE) -fH

run-octave: $(octexec_LTLIBRARIES)
	$(AM_V_at)$(swig_octave_test) $(RUNTOOL) $(OCTAVE) -f

EXTRA_DIST += \
	$(swig_octave_sources) \
	swig_octave.deps \
	$(END_OF_LIST)

endif # SWIG_BUILD_OCTAVE

if SWIG_BUILD_PYTHON

@SWIG_include_deps@/swig_python.deps

pkgpyexec_LTLIBRARIES = python/swiglal.la
nodist_pkgpyexec_PYTHON = $(swig_python_pysource)
nodist_python_swiglal_la_SOURCES = $(swig_python_sources)
python_swiglal_la_CPPFLAGS = $(swig_cppflags) $(SWIG_PYTHON_CPPFLAGS)
python_swiglal_la_CFLAGS = $(SWIG_PYTHON_CFLAGS)
python_swiglal_la_LDFLAGS = $(swig_ldflags) $(SWIG_PYTHON_LDFLAGS)
python_swiglal_la_LIBADD = $(swig_module_lal_libs)
python_swiglal_la_LIBTOOLFLAGS = $(swig_libtoolflags)

all-local: swig-python-all-local
swig-python-all-local: python/$(am__dirstamp)
	$(AM_V_at)cd python/ && rm -f _$(PACKAGE)$(SWIG_SOEXT) && $(LN_S) $(SWIG_LTLIBDIR)/swiglal$(SWIG_SOEXT) _$(PACKAGE)$(SWIG_SOEXT)

install-exec-hook: swig-python-install-hook
swig-python-install-hook:
	cd $(DESTDIR)$(pkgpyexecdir) && rm -f swiglal.la _$(PACKAGE)$(SWIG_SOEXT)* && mv -f swiglal$(SWIG_SOEXT) _$(PACKAGE)$(SWIG_SOEXT)

uninstall-hook: swig-python-uninstall-hook
swig-python-uninstall-hook:
	cd $(DESTDIR)$(pkgpyexecdir) && rm -f _$(PACKAGE)$(SWIG_SOEXT)

TESTS += SWIGTest$(PACKAGE_NAME)Python.py
PY_LOG_COMPILER = $(swig_python_test) $(PYTHON)

run-python: $(pkgpyexec_LTLIBRARIES)
	$(AM_V_at)$(swig_python_test) $(RUNTOOL) $(PYTHON) $(SWIG_IPYTHON_CMD)

EXTRA_DIST += \
	$(swig_python_sources) \
	$(swig_python_pysource) \
	swig_python.deps \
	$(END_OF_LIST)

endif # SWIG_BUILD_PYTHON

if SWIG_GENERATE

@SWIG_include_deps@/swig_preproc.deps

# swig_preproc.i.tmp is always generated, but replaces swig_preproc.i only if they differ
swig_preproc.i: force-swig-preproc-generation
	$(AM_V_at)echo '// $@: generated by $(subdir)/Makefile' >$@.tmp; \
	headers=`find $(top_builddir)/include/lal -name '*.h' ! -name '*VCSInfoHeader.h'`; \
	headers=`printf '%s\n' $${headers} | $(SED) 's|^.*/\([^/]*\)$$|\1|' | sort`; \
	echo "%module swiglal_preproc;" >>$@.tmp; \
	echo "#pragma SWIG nowarn=SWIGWARN_PP_MISSING_FILE" >>$@.tmp; \
	echo "#pragma SWIG nowarn=SWIGWARN_PARSE_REDEFINED" >>$@.tmp; \
	echo "%warnfilter(SWIGWARN_PARSE_REDUNDANT) __swiglal__;" >>$@.tmp; \
	echo "%warnfilter(SWIGWARN_PARSE_REDUNDANT) __swiglal_clear__;" >>$@.tmp; \
	echo "%include <lal/LALStddef.h>" >>$@.tmp; \
	printf "%%include <lal/%s>\n" $${headers} >>$@.tmp; \
	if test -f $@ && diff -s $@ $@.tmp >/dev/null 2>&1; then \
		rm -f $@.tmp; \
	else \
		mv -f $@.tmp $@; \
	fi

swig_preproc.xml: swig_preproc.i Makefile
	$(AM_V_GEN)if $(SWIG) -MF swig_preproc.deps.tmp $(swig_preproc_flags) -o $@ $<; then \
		mv -f swig_preproc.deps.tmp swig_preproc.deps; \
		exit 0; \
	else \
		rm -f swig_preproc.deps.tmp $@; \
		exit 1; \
	fi

$(swig_iface): swig_preproc.xml $(srcdir)/generate_swig_iface.py
	$(AM_V_GEN)if $(PYTHON) $(srcdir)/generate_swig_iface.py '$(PACKAGE_NAME)' '$(SWIG_DEPENDENCIES)' '$(swig_function_prefixes)' $< $@; then \
		rm -f $(top_builddir)/include/lal/$(swig_iface); \
		$(LN_S) $(abs_top_builddir)/swig/$(swig_iface) $(top_builddir)/include/lal/$(swig_iface); \
		exit 0; \
	else \
		rm -f $@; \
		exit 1; \
	fi

$(swig_octave_sources): $(swig_iface) swig_config.h octave/$(am__dirstamp)
	$(AM_V_GEN)if $(SWIG) -MF swig_octave.deps.tmp $(swig_octave_flags) -o $@ $<; then \
		$(swig_deps_filter) swig_octave.deps.tmp > swig_octave.deps; \
		rm -f swig_octave.deps.tmp; \
		exit 0; \
	else \
		rm -f swig_octave.deps.tmp $@; \
		exit 1; \
	fi

$(swig_python_sources): $(swig_iface) swig_config.h python/$(am__dirstamp)
	$(AM_V_GEN)if $(SWIG) -MF swig_python.deps.tmp $(swig_python_flags) -o $@ $<; then \
		$(swig_deps_filter) swig_python.deps.tmp > swig_python.deps; \
		rm -f swig_python.deps.tmp; \
		exit 0; \
	else \
		rm -f swig_python.deps.tmp $@; \
		exit 1; \
	fi

$(swig_python_pysource): $(swig_python_sources)

nodist_pkginclude_HEADERS += \
	$(swig_iface) \
	$(END_OF_LIST)

CLEANFILES += \
	$(swig_iface) \
	$(swig_octave_sources) \
	$(swig_python_pysource) \
	$(swig_python_pysource)c \
	$(swig_python_pysource)o \
	$(swig_python_sources) \
	swig_preproc.i \
	swig_preproc.i.tmp \
	swig_preproc.xml \
	$(END_OF_LIST)

distclean-local: swig-distclean-generate-local
swig-distclean-generate-local:
	-rm -f swig_*.deps

else # !SWIG_GENERATE

$(swig_octave_sources) $(swig_python_sources):
	@echo "################################################################" >&2; \
	echo  "You are trying to re-create the SWIG-generated source file" >&2; \
	echo  "   $@" >&2; \
	echo  "but $(PACKAGE_NAME) was not configured with SWIG generation" >&2; \
	echo  "enabled. Please ensure SWIG is installed and re-run ./configure" >&2; \
	echo  "with --enable-swig=generate or --enable-swig-<lang>=generate." >&2; \
	echo  "################################################################" >&2; \
	exit 1

endif # SWIG_GENERATE

endif # SWIG_BUILD

tags-am:
	@echo > swig_dummy.c && $(ETAGS) swig_dummy.c && rm -f swig_dummy.c
ctags-am:
	@echo > swig_dummy.c && $(CTAGS) swig_dummy.c && rm -f swig_dummy.c
cscopelist-am:
	@:
